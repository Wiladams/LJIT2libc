--[[
    This file is the result of some processing through
    testy/elfmorph.lua

    primarily to get the #defines related to constants
    turning into static const int
--]]

local ffi = require("ffi")
local bit = require("bit")
local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local E = {}  -- things to be exported

ffi.cdef[[
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef	int32_t  Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef	int32_t  Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef	int64_t  Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef	int64_t  Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
]]
ffi.cdef[[
static const int EI_NIDENT = 16;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf32_Half	e_type;
  Elf32_Half	e_machine;
  Elf32_Word	e_version;
  Elf32_Addr	e_entry;
  Elf32_Off	e_phoff;
  Elf32_Off	e_shoff;
  Elf32_Word	e_flags;
  Elf32_Half	e_ehsize;
  Elf32_Half	e_phentsize;
  Elf32_Half	e_phnum;
  Elf32_Half	e_shentsize;
  Elf32_Half	e_shnum;
  Elf32_Half	e_shstrndx;
} Elf32_Ehdr;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf64_Half	e_type;
  Elf64_Half	e_machine;
  Elf64_Word	e_version;
  Elf64_Addr	e_entry;
  Elf64_Off	e_phoff;
  Elf64_Off	e_shoff;
  Elf64_Word	e_flags;
  Elf64_Half	e_ehsize;
  Elf64_Half	e_phentsize;
  Elf64_Half	e_phnum;
  Elf64_Half	e_shentsize;
  Elf64_Half	e_shnum;
  Elf64_Half	e_shstrndx;
} Elf64_Ehdr;
]]

ffi.cdef[[
static const int EI_MAG0 = 0;
static const int ELFMAG0 = 0x7f;
static const int EI_MAG1 = 1;
static const int ELFMAG1 = 'E';
static const int EI_MAG2 = 2;
static const int ELFMAG2 = 'L';
static const int EI_MAG3 = 3;
static const int ELFMAG3 = 'F';
]]

E.ELFMAG		="\177ELF";

ffi.cdef[[
static const int SELFMAG = 4;
static const int EI_CLASS = 4;
static const int ELFCLASSNONE = 0;
static const int ELFCLASS32 = 1;
static const int ELFCLASS64 = 2;
static const int ELFCLASSNUM = 3;
static const int EI_DATA = 5;
static const int ELFDATANONE = 0;
static const int ELFDATA2LSB = 1;
static const int ELFDATA2MSB = 2;
static const int ELFDATANUM = 3;
static const int EI_VERSION = 6;
static const int EI_OSABI = 7;
static const int ELFOSABI_NONE = 0;
static const int ELFOSABI_SYSV = 0;
static const int ELFOSABI_HPUX = 1;
static const int ELFOSABI_NETBSD = 2;
static const int ELFOSABI_LINUX = 3;
static const int ELFOSABI_GNU = 3;
static const int ELFOSABI_SOLARIS = 6;
static const int ELFOSABI_AIX = 7;
static const int ELFOSABI_IRIX = 8;
static const int ELFOSABI_FREEBSD = 9;
static const int ELFOSABI_TRU64 = 10;
static const int ELFOSABI_MODESTO = 11;
static const int ELFOSABI_OPENBSD = 12;
static const int ELFOSABI_ARM = 97;
static const int ELFOSABI_STANDALONE = 255;
static const int EI_ABIVERSION = 8;
static const int EI_PAD = 9;
static const int ET_NONE = 0;
static const int ET_REL = 1;
static const int ET_EXEC = 2;
static const int ET_DYN = 3;
static const int ET_CORE = 4;
static const int ET_NUM = 5;
static const int ET_LOOS = 0xfe00;
static const int ET_HIOS = 0xfeff;
static const int ET_LOPROC = 0xff00;
static const int ET_HIPROC = 0xffff;
static const int EM_NONE = 0;
static const int EM_M32 = 1;
static const int EM_SPARC = 2;
static const int EM_386 = 3;
static const int EM_68K = 4;
static const int EM_88K = 5;
static const int EM_860 = 7;
static const int EM_MIPS = 8;
static const int EM_S370 = 9;
static const int EM_MIPS_RS3_LE = 10;
static const int EM_PARISC = 15;
static const int EM_VPP500 = 17;
static const int EM_SPARC32PLUS = 18;
static const int EM_960 = 19;
static const int EM_PPC = 20;
static const int EM_PPC64 = 21;
static const int EM_S390 = 22;
static const int EM_V800 = 36;
static const int EM_FR20 = 37;
static const int EM_RH32 = 38;
static const int EM_RCE = 39;
static const int EM_ARM = 40;
static const int EM_FAKE_ALPHA = 41;
static const int EM_SH = 42;
static const int EM_SPARCV9 = 43;
static const int EM_TRICORE = 44;
static const int EM_ARC = 45;
static const int EM_H8_300 = 46;
static const int EM_H8_300H = 47;
static const int EM_H8S = 48;
static const int EM_H8_500 = 49;
static const int EM_IA_64 = 50;
static const int EM_MIPS_X = 51;
static const int EM_COLDFIRE = 52;
static const int EM_68HC12 = 53;
static const int EM_MMA = 54;
static const int EM_PCP = 55;
static const int EM_NCPU = 56;
static const int EM_NDR1 = 57;
static const int EM_STARCORE = 58;
static const int EM_ME16 = 59;
static const int EM_ST100 = 60;
static const int EM_TINYJ = 61;
static const int EM_X86_64 = 62;
static const int EM_PDSP = 63;
static const int EM_FX66 = 66;
static const int EM_ST9PLUS = 67;
static const int EM_ST7 = 68;
static const int EM_68HC16 = 69;
static const int EM_68HC11 = 70;
static const int EM_68HC08 = 71;
static const int EM_68HC05 = 72;
static const int EM_SVX = 73;
static const int EM_ST19 = 74;
static const int EM_VAX = 75;
static const int EM_CRIS = 76;
static const int EM_JAVELIN = 77;
static const int EM_FIREPATH = 78;
static const int EM_ZSP = 79;
static const int EM_MMIX = 80;
static const int EM_HUANY = 81;
static const int EM_PRISM = 82;
static const int EM_AVR = 83;
static const int EM_FR30 = 84;
static const int EM_D10V = 85;
static const int EM_D30V = 86;
static const int EM_V850 = 87;
static const int EM_M32R = 88;
static const int EM_MN10300 = 89;
static const int EM_MN10200 = 90;
static const int EM_PJ = 91;
static const int EM_OR1K = 92;
static const int EM_ARC_A5 = 93;
static const int EM_XTENSA = 94;
static const int EM_AARCH64 = 183;
static const int EM_TILEPRO = 188;
static const int EM_MICROBLAZE = 189;
static const int EM_TILEGX = 191;
static const int EM_NUM = 192;
static const int EM_ALPHA = 0x9026;
static const int EV_NONE = 0;
static const int EV_CURRENT = 1;
static const int EV_NUM = 2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	sh_name;
  Elf32_Word	sh_type;
  Elf32_Word	sh_flags;
  Elf32_Addr	sh_addr;
  Elf32_Off	sh_offset;
  Elf32_Word	sh_size;
  Elf32_Word	sh_link;
  Elf32_Word	sh_info;
  Elf32_Word	sh_addralign;
  Elf32_Word	sh_entsize;
} Elf32_Shdr;
typedef struct {
  Elf64_Word	sh_name;
  Elf64_Word	sh_type;
  Elf64_Xword	sh_flags;
  Elf64_Addr	sh_addr;
  Elf64_Off	sh_offset;
  Elf64_Xword	sh_size;
  Elf64_Word	sh_link;
  Elf64_Word	sh_info;
  Elf64_Xword	sh_addralign;
  Elf64_Xword	sh_entsize;
} Elf64_Shdr;
]]

ffi.cdef[[
static const int SHN_UNDEF = 0;
static const int SHN_LORESERVE = 0xff00;
static const int SHN_LOPROC = 0xff00;
static const int SHN_BEFORE = 0xff00;
static const int SHN_AFTER = 0xff01;
static const int SHN_HIPROC = 0xff1f;
static const int SHN_LOOS = 0xff20;
static const int SHN_HIOS = 0xff3f;
static const int SHN_ABS = 0xfff1;
static const int SHN_COMMON = 0xfff2;
static const int SHN_XINDEX = 0xffff;
static const int SHN_HIRESERVE = 0xffff;
static const int SHT_NULL = 0;
static const int SHT_PROGBITS = 1;
static const int SHT_SYMTAB = 2;
static const int SHT_STRTAB = 3;
static const int SHT_RELA = 4;
static const int SHT_HASH = 5;
static const int SHT_DYNAMIC = 6;
static const int SHT_NOTE = 7;
static const int SHT_NOBITS = 8;
static const int SHT_REL = 9;
static const int SHT_SHLIB = 10;
static const int SHT_DYNSYM = 11;
static const int SHT_INIT_ARRAY = 14;
static const int SHT_FINI_ARRAY = 15;
static const int SHT_PREINIT_ARRAY = 16;
static const int SHT_GROUP = 17;
static const int SHT_SYMTAB_SHNDX = 18;
static const int SHT_NUM = 19;
static const int SHT_LOOS = 0x60000000;
static const int SHT_GNU_ATTRIBUTES = 0x6ffffff5;
static const int SHT_GNU_HASH = 0x6ffffff6;
static const int SHT_GNU_LIBLIST = 0x6ffffff7;
static const int SHT_CHECKSUM = 0x6ffffff8;
static const int SHT_LOSUNW = 0x6ffffffa;
static const int SHT_SUNW_move = 0x6ffffffa;
static const int SHT_SUNW_COMDAT = 0x6ffffffb;
static const int SHT_SUNW_syminfo = 0x6ffffffc;
static const int SHT_GNU_verdef = 0x6ffffffd;
static const int SHT_GNU_verneed = 0x6ffffffe;
static const int SHT_GNU_versym = 0x6fffffff;
static const int SHT_HISUNW = 0x6fffffff;
static const int SHT_HIOS = 0x6fffffff;
static const int SHT_LOPROC = 0x70000000;
static const int SHT_HIPROC = 0x7fffffff;
static const int SHT_LOUSER = 0x80000000;
static const int SHT_HIUSER = 0x8fffffff;
static const int SHF_MASKOS = 0x0ff00000;
static const int SHF_MASKPROC = 0xf0000000;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	st_name;
  Elf32_Addr	st_value;
  Elf32_Word	st_size;
  unsigned char	st_info;
  unsigned char	st_other;
  Elf32_Section	st_shndx;
} Elf32_Sym;
typedef struct {
  Elf64_Word	st_name;
  unsigned char	st_info;
  unsigned char st_other;
  Elf64_Section	st_shndx;
  Elf64_Addr	st_value;
  Elf64_Xword	st_size;
} Elf64_Sym;
typedef struct {
  Elf32_Half si_boundto;
  Elf32_Half si_flags;
} Elf32_Syminfo;
typedef struct {
  Elf64_Half si_boundto;
  Elf64_Half si_flags;
} Elf64_Syminfo;
]]

ffi.cdef[[
static const int SYMINFO_BT_SELF = 0xffff;
static const int SYMINFO_BT_PARENT = 0xfffe;
static const int SYMINFO_BT_LOWRESERVE = 0xff00;
static const int SYMINFO_FLG_DIRECT = 0x0001;
static const int SYMINFO_FLG_PASSTHRU = 0x0002;
static const int SYMINFO_FLG_COPY = 0x0004;
static const int SYMINFO_FLG_LAZYLOAD = 0x0008;
static const int SYMINFO_NONE = 0;
static const int SYMINFO_CURRENT = 1;
static const int SYMINFO_NUM = 2;
]]

function E.ELF32_ST_BIND(val)		return rshift(ffi.cast("unsigned char", val), 4); end
function E.ELF32_ST_TYPE(val)		return band(val, 0xf); end
function E.ELF32_ST_INFO(bind, atype)	return lshift(bind, 4) + band(atype, 0xf); end
function E.ELF64_ST_BIND(val)		return E.ELF32_ST_BIND(val); end
function E.ELF64_ST_TYPE(val)		return E.ELF32_ST_TYPE(val); end
function E.ELF64_ST_INFO(bind, atype)	return E.ELF32_ST_INFO(bind, atype); end

ffi.cdef[[
static const int STB_LOCAL = 0;
static const int STB_GLOBAL = 1;
static const int STB_WEAK = 2;
static const int STB_NUM = 3;
static const int STB_LOOS = 10;
static const int STB_GNU_UNIQUE = 10;
static const int STB_HIOS = 12;
static const int STB_LOPROC = 13;
static const int STB_HIPROC = 15;
static const int STT_NOTYPE = 0;
static const int STT_OBJECT = 1;
static const int STT_FUNC = 2;
static const int STT_SECTION = 3;
static const int STT_FILE = 4;
static const int STT_COMMON = 5;
static const int STT_TLS = 6;
static const int STT_NUM = 7;
static const int STT_LOOS = 10;
static const int STT_GNU_IFUNC = 10;
static const int STT_HIOS = 12;
static const int STT_LOPROC = 13;
static const int STT_HIPROC = 15;
static const int STN_UNDEF = 0;
]]

function E.ELF32_ST_VISIBILITY(o)	return band(o, 0x03); end
function E.ELF64_ST_VISIBILITY(o)	return E.ELF32_ST_VISIBILITY (o); end

ffi.cdef[[
static const int STV_DEFAULT = 0;
static const int STV_INTERNAL = 1;
static const int STV_HIDDEN = 2;
static const int STV_PROTECTED = 3;
]]

ffi.cdef[[
typedef struct
{
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
} Elf32_Rel;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
} Elf64_Rel;
typedef struct {
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
  Elf32_Sword	r_addend;
} Elf32_Rela;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
  Elf64_Sxword	r_addend;
} Elf64_Rela;
]]


function E.ELF32_R_SYM(val)		return rshift((val), 8) end
function E.ELF32_R_TYPE(val)	return band(val, 0xff) end
function E.ELF32_R_INFO(sym, atype)		return lshift(sym, 8) + band(atype, 0xff) end
function E.ELF64_R_SYM(i)			return rshift(i, 32) end
function E.ELF64_R_TYPE(i)			return band(i, 0xffffffff) end
function E.ELF64_R_INFO(sym,atype)		return lshift(ffi.cast("Elf64_Xword", sym), 32) + atype end

ffi.cdef[[
typedef struct {
  Elf32_Word	p_type;
  Elf32_Off	p_offset;
  Elf32_Addr	p_vaddr;
  Elf32_Addr	p_paddr;
  Elf32_Word	p_filesz;
  Elf32_Word	p_memsz;
  Elf32_Word	p_flags;
  Elf32_Word	p_align;
} Elf32_Phdr;
typedef struct {
  Elf64_Word	p_type;
  Elf64_Word	p_flags;
  Elf64_Off	p_offset;
  Elf64_Addr	p_vaddr;
  Elf64_Addr	p_paddr;
  Elf64_Xword	p_filesz;
  Elf64_Xword	p_memsz;
  Elf64_Xword	p_align;
} Elf64_Phdr;
]]

ffi.cdef[[
static const int PT_NULL = 0;
static const int PT_LOAD = 1;
static const int PT_DYNAMIC = 2;
static const int PT_INTERP = 3;
static const int PT_NOTE = 4;
static const int PT_SHLIB = 5;
static const int PT_PHDR = 6;
static const int PT_TLS = 7;
static const int PT_NUM = 8;
static const int PT_LOOS = 0x60000000;
static const int PT_GNU_EH_FRAME = 0x6474e550;
static const int PT_GNU_STACK = 0x6474e551;
static const int PT_GNU_RELRO = 0x6474e552;
static const int PT_LOSUNW = 0x6ffffffa;
static const int PT_SUNWBSS = 0x6ffffffa;
static const int PT_SUNWSTACK = 0x6ffffffb;
static const int PT_HISUNW = 0x6fffffff;
static const int PT_HIOS = 0x6fffffff;
static const int PT_LOPROC = 0x70000000;
static const int PT_HIPROC = 0x7fffffff;
static const int PN_XNUM = 0xffff;
static const int PF_MASKOS = 0x0ff00000;
static const int PF_MASKPROC = 0xf0000000;
static const int NT_PRSTATUS = 1;
static const int NT_FPREGSET = 2;
static const int NT_PRPSINFO = 3;
static const int NT_PRXREG = 4;
static const int NT_TASKSTRUCT = 4;
static const int NT_PLATFORM = 5;
static const int NT_AUXV = 6;
static const int NT_GWINDOWS = 7;
static const int NT_ASRS = 8;
static const int NT_PSTATUS = 10;
static const int NT_PSINFO = 13;
static const int NT_PRCRED = 14;
static const int NT_UTSNAME = 15;
static const int NT_LWPSTATUS = 16;
static const int NT_LWPSINFO = 17;
static const int NT_PRFPXREG = 20;
static const int NT_SIGINFO = 0x53494749;
static const int NT_FILE = 0x46494c45;
static const int NT_PRXFPREG = 0x46e62b7f;
static const int NT_PPC_VMX = 0x100;
static const int NT_PPC_SPE = 0x101;
static const int NT_PPC_VSX = 0x102;
static const int NT_386_TLS = 0x200;
static const int NT_386_IOPERM = 0x201;
static const int NT_X86_XSTATE = 0x202;
static const int NT_S390_HIGH_GPRS = 0x300;
static const int NT_S390_TIMER = 0x301;
static const int NT_S390_TODCMP = 0x302;
static const int NT_S390_TODPREG = 0x303;
static const int NT_S390_CTRS = 0x304;
static const int NT_S390_PREFIX = 0x305;
static const int NT_S390_LAST_BREAK = 0x306;
static const int NT_S390_SYSTEM_CALL = 0x307;
static const int NT_S390_TDB = 0x308;
static const int NT_ARM_VFP = 0x400;
static const int NT_ARM_TLS = 0x401;
static const int NT_ARM_HW_BREAK = 0x402;
static const int NT_ARM_HW_WATCH = 0x403;
static const int NT_METAG_CBUF = 0x500;
static const int NT_METAG_RPIPE = 0x501;
static const int NT_METAG_TLS = 0x502;
]]

ffi.cdef[[
typedef struct {
  Elf32_Sword d_tag;
  union {
      Elf32_Word d_val;
      Elf32_Addr d_ptr;
  } d_un;
} Elf32_Dyn;
typedef struct {
  Elf64_Sxword d_tag;
  union {
      Elf64_Xword d_val;
      Elf64_Addr d_ptr;
  } d_un;
} Elf64_Dyn;
]]

ffi.cdef[[
static const int DT_MIPS_NUM = 0x35;
]]

ffi.cdef[[
static const int DT_NULL = 0;
static const int DT_NEEDED = 1;
static const int DT_PLTRELSZ = 2;
static const int DT_PLTGOT = 3;
static const int DT_HASH = 4;
static const int DT_STRTAB = 5;
static const int DT_SYMTAB = 6;
static const int DT_RELA = 7;
static const int DT_RELASZ = 8;
static const int DT_RELAENT = 9;
static const int DT_STRSZ = 10;
static const int DT_SYMENT = 11;
static const int DT_INIT = 12;
static const int DT_FINI = 13;
static const int DT_SONAME = 14;
static const int DT_RPATH = 15;
static const int DT_SYMBOLIC = 16;
static const int DT_REL = 17;
static const int DT_RELSZ = 18;
static const int DT_RELENT = 19;
static const int DT_PLTREL = 20;
static const int DT_DEBUG = 21;
static const int DT_TEXTREL = 22;
static const int DT_JMPREL = 23;
static const int DT_BIND_NOW = 24;
static const int DT_INIT_ARRAY = 25;
static const int DT_FINI_ARRAY = 26;
static const int DT_INIT_ARRAYSZ = 27;
static const int DT_FINI_ARRAYSZ = 28;
static const int DT_RUNPATH = 29;
static const int DT_FLAGS = 30;
static const int DT_ENCODING = 32;
static const int DT_PREINIT_ARRAY = 32;
static const int DT_PREINIT_ARRAYSZ = 33;
static const int DT_NUM = 34;
static const int DT_LOOS = 0x6000000d;
static const int DT_HIOS = 0x6ffff000;
static const int DT_LOPROC = 0x70000000;
static const int DT_HIPROC = 0x7fffffff;
static const int DT_PROCNUM = DT_MIPS_NUM;
static const int DT_VALRNGLO = 0x6ffffd00;
static const int DT_GNU_PRELINKED = 0x6ffffdf5;
static const int DT_GNU_CONFLICTSZ = 0x6ffffdf6;
static const int DT_GNU_LIBLISTSZ = 0x6ffffdf7;
static const int DT_CHECKSUM = 0x6ffffdf8;
static const int DT_PLTPADSZ = 0x6ffffdf9;
static const int DT_MOVEENT = 0x6ffffdfa;
static const int DT_MOVESZ = 0x6ffffdfb;
static const int DT_FEATURE_1 = 0x6ffffdfc;
static const int DT_POSFLAG_1 = 0x6ffffdfd;
static const int DT_SYMINSZ = 0x6ffffdfe;
static const int DT_SYMINENT = 0x6ffffdff;
static const int DT_VALRNGHI = 0x6ffffdff;
]]

ffi.cdef[[
static const int DT_VALNUM = 12;
static const int DT_ADDRRNGLO = 0x6ffffe00;
static const int DT_GNU_HASH = 0x6ffffef5;
static const int DT_TLSDESC_PLT = 0x6ffffef6;
static const int DT_TLSDESC_GOT = 0x6ffffef7;
static const int DT_GNU_CONFLICT = 0x6ffffef8;
static const int DT_GNU_LIBLIST = 0x6ffffef9;
static const int DT_CONFIG = 0x6ffffefa;
static const int DT_DEPAUDIT = 0x6ffffefb;
static const int DT_AUDIT = 0x6ffffefc;
static const int DT_PLTPAD = 0x6ffffefd;
static const int DT_MOVETAB = 0x6ffffefe;
static const int DT_SYMINFO = 0x6ffffeff;
static const int DT_ADDRRNGHI = 0x6ffffeff;
]]

ffi.cdef[[
static const int DT_ADDRNUM = 11;
static const int DT_VERSYM = 0x6ffffff0;
static const int DT_RELACOUNT = 0x6ffffff9;
static const int DT_RELCOUNT = 0x6ffffffa;
static const int DT_FLAGS_1 = 0x6ffffffb;
static const int DT_VERDEF = 0x6ffffffc;
static const int DT_VERDEFNUM = 0x6ffffffd;
static const int DT_VERNEED = 0x6ffffffe;
static const int DT_VERNEEDNUM = 0x6fffffff;
]]

ffi.cdef[[
static const int DT_VERSIONTAGNUM = 16;
static const int DT_AUXILIARY = 0x7ffffffd;
static const int DT_FILTER = 0x7fffffff;
]]

function E.DT_VALTAGIDX(tag) return (ffi.C.DT_VALRNGHI - (tag)) end
function E.DT_ADDRTAGIDX(tag)  return (ffi.C.DT_ADDRRNGHI - (tag)) end
function E.DT_VERSIONTAGIDX(tag) return (ffi.C.DT_VERNEEDNUM - (tag)) end
--function E.DT_EXTRATAGIDX(tag)	((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1) end

ffi.cdef[[
static const int DT_EXTRANUM = 3;
static const int DF_ORIGIN = 0x00000001;
static const int DF_SYMBOLIC = 0x00000002;
static const int DF_TEXTREL = 0x00000004;
static const int DF_BIND_NOW = 0x00000008;
static const int DF_STATIC_TLS = 0x00000010;
static const int DF_1_NOW = 0x00000001;
static const int DF_1_GLOBAL = 0x00000002;
static const int DF_1_GROUP = 0x00000004;
static const int DF_1_NODELETE = 0x00000008;
static const int DF_1_LOADFLTR = 0x00000010;
static const int DF_1_INITFIRST = 0x00000020;
static const int DF_1_NOOPEN = 0x00000040;
static const int DF_1_ORIGIN = 0x00000080;
static const int DF_1_DIRECT = 0x00000100;
static const int DF_1_TRANS = 0x00000200;
static const int DF_1_INTERPOSE = 0x00000400;
static const int DF_1_NODEFLIB = 0x00000800;
static const int DF_1_NODUMP = 0x00001000;
static const int DF_1_CONFALT = 0x00002000;
static const int DF_1_ENDFILTEE = 0x00004000;
static const int DF_1_DISPRELDNE = 0x00008000;
static const int DF_1_DISPRELPND = 0x00010000;
static const int DF_1_NODIRECT = 0x00020000;
static const int DF_1_IGNMULDEF = 0x00040000;
static const int DF_1_NOKSYMS = 0x00080000;
static const int DF_1_NOHDR = 0x00100000;
static const int DF_1_EDITED = 0x00200000;
static const int DF_1_NORELOC = 0x00400000;
static const int DF_1_SYMINTPOSE = 0x00800000;
static const int DF_1_GLOBAUDIT = 0x01000000;
static const int DF_1_SINGLETON = 0x02000000;
static const int DTF_1_PARINIT = 0x00000001;
static const int DTF_1_CONFEXP = 0x00000002;
static const int DF_P1_LAZYLOAD = 0x00000001;
]]

ffi.cdef[[
typedef struct {
  Elf32_Half	vd_version;
  Elf32_Half	vd_flags;
  Elf32_Half	vd_ndx;
  Elf32_Half	vd_cnt;
  Elf32_Word	vd_hash;
  Elf32_Word	vd_aux;
  Elf32_Word	vd_next;
} Elf32_Verdef;
typedef struct {
  Elf64_Half	vd_version;
  Elf64_Half	vd_flags;
  Elf64_Half	vd_ndx;
  Elf64_Half	vd_cnt;
  Elf64_Word	vd_hash;
  Elf64_Word	vd_aux;
  Elf64_Word	vd_next;
} Elf64_Verdef;
]]

ffi.cdef[[
static const int VER_DEF_NONE = 0;
static const int VER_DEF_CURRENT = 1;
static const int VER_DEF_NUM = 2;
static const int VER_FLG_BASE = 0x1;
static const int VER_FLG_WEAK = 0x2;
static const int VER_NDX_LOCAL = 0;
static const int VER_NDX_GLOBAL = 1;
static const int VER_NDX_LORESERVE = 0xff00;
static const int VER_NDX_ELIMINATE = 0xff01;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vda_name;
  Elf32_Word	vda_next;
} Elf32_Verdaux;
typedef struct {
  Elf64_Word	vda_name;
  Elf64_Word	vda_next;
} Elf64_Verdaux;
typedef struct {
  Elf32_Half	vn_version;
  Elf32_Half	vn_cnt;
  Elf32_Word	vn_file;
  Elf32_Word	vn_aux;
  Elf32_Word	vn_next;
} Elf32_Verneed;
typedef struct {
  Elf64_Half	vn_version;
  Elf64_Half	vn_cnt;
  Elf64_Word	vn_file;
  Elf64_Word	vn_aux;
  Elf64_Word	vn_next;
} Elf64_Verneed;
]]

ffi.cdef[[
static const int VER_NEED_NONE = 0;
static const int VER_NEED_CURRENT = 1;
static const int VER_NEED_NUM = 2;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vna_hash;
  Elf32_Half	vna_flags;
  Elf32_Half	vna_other;
  Elf32_Word	vna_name;
  Elf32_Word	vna_next;
} Elf32_Vernaux;
typedef struct {
  Elf64_Word	vna_hash;
  Elf64_Half	vna_flags;
  Elf64_Half	vna_other;
  Elf64_Word	vna_name;
  Elf64_Word	vna_next;
} Elf64_Vernaux;
]]



ffi.cdef[[
typedef struct {
  uint32_t a_type;
  union {
      uint32_t a_val;
  } a_un;
} Elf32_auxv_t;
typedef struct {
  uint64_t a_type;
  union {
      uint64_t a_val;
  } a_un;
} Elf64_auxv_t;
]]


ffi.cdef[[
static const int AT_NULL = 0;
static const int AT_IGNORE = 1;
static const int AT_EXECFD = 2;
static const int AT_PHDR = 3;
static const int AT_PHENT = 4;
static const int AT_PHNUM = 5;
static const int AT_PAGESZ = 6;
static const int AT_BASE = 7;
static const int AT_FLAGS = 8;
static const int AT_ENTRY = 9;
static const int AT_NOTELF = 10;
static const int AT_UID = 11;
static const int AT_EUID = 12;
static const int AT_GID = 13;
static const int AT_EGID = 14;
static const int AT_CLKTCK = 17;
static const int AT_PLATFORM = 15;
static const int AT_HWCAP = 16;
static const int AT_FPUCW = 18;
static const int AT_DCACHEBSIZE = 19;
static const int AT_ICACHEBSIZE = 20;
static const int AT_UCACHEBSIZE = 21;
static const int AT_IGNOREPPC = 22;
static const int AT_SECURE = 23;
static const int AT_BASE_PLATFORM = 24;
static const int AT_RANDOM = 25;
static const int AT_HWCAP2 = 26;
static const int AT_EXECFN = 31;
static const int AT_SYSINFO = 32;
static const int AT_SYSINFO_EHDR = 33;
static const int AT_L1I_CACHESHAPE = 34;
static const int AT_L1D_CACHESHAPE = 35;
static const int AT_L2_CACHESHAPE = 36;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word n_namesz;
  Elf32_Word n_descsz;
  Elf32_Word n_type;
} Elf32_Nhdr;
typedef struct {
  Elf64_Word n_namesz;
  Elf64_Word n_descsz;
  Elf64_Word n_type;
} Elf64_Nhdr;
]]


E.ELF_NOTE_SOLARIS	= "SUNW Solaris";
E.ELF_NOTE_GNU		= "GNU";

ffi.cdef[[
static const int ELF_NOTE_PAGESIZE_HINT = 1;
static const int NT_GNU_ABI_TAG = 1;
static const int ELF_NOTE_ABI = NT_GNU_ABI_TAG;
static const int ELF_NOTE_OS_LINUX = 0;
static const int ELF_NOTE_OS_GNU = 1;
static const int ELF_NOTE_OS_SOLARIS2 = 2;
static const int ELF_NOTE_OS_FREEBSD = 3;
static const int NT_GNU_BUILD_ID = 3;
]]

ffi.cdef[[
typedef struct {
  Elf32_Xword m_value;
  Elf32_Word m_info;
  Elf32_Word m_poffset;
  Elf32_Half m_repeat;
  Elf32_Half m_stride;
} Elf32_Move;
typedef struct {
  Elf64_Xword m_value;
  Elf64_Xword m_info;
  Elf64_Xword m_poffset;
  Elf64_Half m_repeat;
  Elf64_Half m_stride;
} Elf64_Move;
]]


function E.ELF32_M_SYM(info)	return rshift((info), 8) end
function E.ELF32_M_SIZE(info)	return ffi.cast("unsigned char", info) end
function E.ELF32_M_INFO(sym, size)	return lshift(sym, 8) + ffi.cast("unsigned char", size) end
function E.ELF64_M_SYM(info)	return E.ELF32_M_SYM (info) end
function E.ELF64_M_SIZE(info)	return E.ELF32_M_SIZE (info) end
function E.ELF64_M_INFO(sym, size)	return E.ELF32_M_INFO (sym, size) end


ffi.cdef[[
static const int EF_CPU32 = 0x00810000;
static const int R_68K_NONE = 0;
static const int R_68K_32 = 1;
static const int R_68K_16 = 2;
static const int R_68K_8 = 3;
static const int R_68K_PC32 = 4;
static const int R_68K_PC16 = 5;
static const int R_68K_PC8 = 6;
static const int R_68K_GOT32 = 7;
static const int R_68K_GOT16 = 8;
static const int R_68K_GOT8 = 9;
static const int R_68K_GOT32O = 10;
static const int R_68K_GOT16O = 11;
static const int R_68K_GOT8O = 12;
static const int R_68K_PLT32 = 13;
static const int R_68K_PLT16 = 14;
static const int R_68K_PLT8 = 15;
static const int R_68K_PLT32O = 16;
static const int R_68K_PLT16O = 17;
static const int R_68K_PLT8O = 18;
static const int R_68K_COPY = 19;
static const int R_68K_GLOB_DAT = 20;
static const int R_68K_JMP_SLOT = 21;
static const int R_68K_RELATIVE = 22;
static const int R_68K_NUM = 23;
static const int R_386_NONE = 0;
static const int R_386_32 = 1;
static const int R_386_PC32 = 2;
static const int R_386_GOT32 = 3;
static const int R_386_PLT32 = 4;
static const int R_386_COPY = 5;
static const int R_386_GLOB_DAT = 6;
static const int R_386_JMP_SLOT = 7;
static const int R_386_RELATIVE = 8;
static const int R_386_GOTOFF = 9;
static const int R_386_GOTPC = 10;
static const int R_386_32PLT = 11;
static const int R_386_TLS_TPOFF = 14;
static const int R_386_TLS_IE = 15;
static const int R_386_TLS_GOTIE = 16;
static const int R_386_TLS_LE = 17;
static const int R_386_TLS_GD = 18;
static const int R_386_TLS_LDM = 19;
static const int R_386_16 = 20;
static const int R_386_PC16 = 21;
static const int R_386_8 = 22;
static const int R_386_PC8 = 23;
static const int R_386_TLS_GD_32 = 24;
static const int R_386_TLS_GD_PUSH = 25;
static const int R_386_TLS_GD_CALL = 26;
static const int R_386_TLS_GD_POP = 27;
static const int R_386_TLS_LDM_32 = 28;
static const int R_386_TLS_LDM_PUSH = 29;
static const int R_386_TLS_LDM_CALL = 30;
static const int R_386_TLS_LDM_POP = 31;
static const int R_386_TLS_LDO_32 = 32;
static const int R_386_TLS_IE_32 = 33;
static const int R_386_TLS_LE_32 = 34;
static const int R_386_TLS_DTPMOD32 = 35;
static const int R_386_TLS_DTPOFF32 = 36;
static const int R_386_TLS_TPOFF32 = 37;
static const int R_386_SIZE32 = 38;
static const int R_386_TLS_GOTDESC = 39;
static const int R_386_TLS_DESC_CALL = 40;
static const int R_386_TLS_DESC = 41;
static const int R_386_IRELATIVE = 42;
static const int R_386_NUM = 43;
static const int STT_SPARC_REGISTER = 13;
static const int EF_SPARCV9_MM = 3;
static const int EF_SPARCV9_TSO = 0;
static const int EF_SPARCV9_PSO = 1;
static const int EF_SPARCV9_RMO = 2;
static const int EF_SPARC_LEDATA = 0x800000;
static const int EF_SPARC_EXT_MASK = 0xFFFF00;
static const int EF_SPARC_32PLUS = 0x000100;
static const int EF_SPARC_SUN_US1 = 0x000200;
static const int EF_SPARC_HAL_R1 = 0x000400;
static const int EF_SPARC_SUN_US3 = 0x000800;
static const int R_SPARC_NONE = 0;
static const int R_SPARC_8 = 1;
static const int R_SPARC_16 = 2;
static const int R_SPARC_32 = 3;
static const int R_SPARC_DISP8 = 4;
static const int R_SPARC_DISP16 = 5;
static const int R_SPARC_DISP32 = 6;
static const int R_SPARC_WDISP30 = 7;
static const int R_SPARC_WDISP22 = 8;
static const int R_SPARC_HI22 = 9;
static const int R_SPARC_22 = 10;
static const int R_SPARC_13 = 11;
static const int R_SPARC_LO10 = 12;
static const int R_SPARC_GOT10 = 13;
static const int R_SPARC_GOT13 = 14;
static const int R_SPARC_GOT22 = 15;
static const int R_SPARC_PC10 = 16;
static const int R_SPARC_PC22 = 17;
static const int R_SPARC_WPLT30 = 18;
static const int R_SPARC_COPY = 19;
static const int R_SPARC_GLOB_DAT = 20;
static const int R_SPARC_JMP_SLOT = 21;
static const int R_SPARC_RELATIVE = 22;
static const int R_SPARC_UA32 = 23;
static const int R_SPARC_PLT32 = 24;
static const int R_SPARC_HIPLT22 = 25;
static const int R_SPARC_LOPLT10 = 26;
static const int R_SPARC_PCPLT32 = 27;
static const int R_SPARC_PCPLT22 = 28;
static const int R_SPARC_PCPLT10 = 29;
static const int R_SPARC_10 = 30;
static const int R_SPARC_11 = 31;
static const int R_SPARC_64 = 32;
static const int R_SPARC_OLO10 = 33;
static const int R_SPARC_HH22 = 34;
static const int R_SPARC_HM10 = 35;
static const int R_SPARC_LM22 = 36;
static const int R_SPARC_PC_HH22 = 37;
static const int R_SPARC_PC_HM10 = 38;
static const int R_SPARC_PC_LM22 = 39;
static const int R_SPARC_WDISP16 = 40;
static const int R_SPARC_WDISP19 = 41;
static const int R_SPARC_GLOB_JMP = 42;
static const int R_SPARC_7 = 43;
static const int R_SPARC_5 = 44;
static const int R_SPARC_6 = 45;
static const int R_SPARC_DISP64 = 46;
static const int R_SPARC_PLT64 = 47;
static const int R_SPARC_HIX22 = 48;
static const int R_SPARC_LOX10 = 49;
static const int R_SPARC_H44 = 50;
static const int R_SPARC_M44 = 51;
static const int R_SPARC_L44 = 52;
static const int R_SPARC_REGISTER = 53;
static const int R_SPARC_UA64 = 54;
static const int R_SPARC_UA16 = 55;
static const int R_SPARC_TLS_GD_HI22 = 56;
static const int R_SPARC_TLS_GD_LO10 = 57;
static const int R_SPARC_TLS_GD_ADD = 58;
static const int R_SPARC_TLS_GD_CALL = 59;
static const int R_SPARC_TLS_LDM_HI22 = 60;
static const int R_SPARC_TLS_LDM_LO10 = 61;
static const int R_SPARC_TLS_LDM_ADD = 62;
static const int R_SPARC_TLS_LDM_CALL = 63;
static const int R_SPARC_TLS_LDO_HIX22 = 64;
static const int R_SPARC_TLS_LDO_LOX10 = 65;
static const int R_SPARC_TLS_LDO_ADD = 66;
static const int R_SPARC_TLS_IE_HI22 = 67;
static const int R_SPARC_TLS_IE_LO10 = 68;
static const int R_SPARC_TLS_IE_LD = 69;
static const int R_SPARC_TLS_IE_LDX = 70;
static const int R_SPARC_TLS_IE_ADD = 71;
static const int R_SPARC_TLS_LE_HIX22 = 72;
static const int R_SPARC_TLS_LE_LOX10 = 73;
static const int R_SPARC_TLS_DTPMOD32 = 74;
static const int R_SPARC_TLS_DTPMOD64 = 75;
static const int R_SPARC_TLS_DTPOFF32 = 76;
static const int R_SPARC_TLS_DTPOFF64 = 77;
static const int R_SPARC_TLS_TPOFF32 = 78;
static const int R_SPARC_TLS_TPOFF64 = 79;
static const int R_SPARC_GOTDATA_HIX22 = 80;
static const int R_SPARC_GOTDATA_LOX10 = 81;
static const int R_SPARC_GOTDATA_OP_HIX22 = 82;
static const int R_SPARC_GOTDATA_OP_LOX10 = 83;
static const int R_SPARC_GOTDATA_OP = 84;
static const int R_SPARC_H34 = 85;
static const int R_SPARC_SIZE32 = 86;
static const int R_SPARC_SIZE64 = 87;
static const int R_SPARC_GNU_VTINHERIT = 250;
static const int R_SPARC_GNU_VTENTRY = 251;
static const int R_SPARC_REV32 = 252;
static const int R_SPARC_NUM = 253;
static const int DT_SPARC_REGISTER = 0x70000001;
static const int DT_SPARC_NUM = 2;
static const int EF_MIPS_NOREORDER = 1;
static const int EF_MIPS_PIC = 2;
static const int EF_MIPS_CPIC = 4;
static const int EF_MIPS_XGOT = 8;
static const int EF_MIPS_64BIT_WHIRL = 16;
static const int EF_MIPS_ABI2 = 32;
static const int EF_MIPS_ABI_ON32 = 64;
static const int EF_MIPS_NAN2008 = 1024;
static const int EF_MIPS_ARCH = 0xf0000000;
static const int EF_MIPS_ARCH_1 = 0x00000000;
static const int EF_MIPS_ARCH_2 = 0x10000000;
static const int EF_MIPS_ARCH_3 = 0x20000000;
static const int EF_MIPS_ARCH_4 = 0x30000000;
static const int EF_MIPS_ARCH_5 = 0x40000000;
static const int EF_MIPS_ARCH_32 = 0x50000000;
static const int EF_MIPS_ARCH_64 = 0x60000000;
static const int EF_MIPS_ARCH_32R2 = 0x70000000;
static const int EF_MIPS_ARCH_64R2 = 0x80000000;
static const int E_MIPS_ARCH_1 = 0x00000000;
static const int E_MIPS_ARCH_2 = 0x10000000;
static const int E_MIPS_ARCH_3 = 0x20000000;
static const int E_MIPS_ARCH_4 = 0x30000000;
static const int E_MIPS_ARCH_5 = 0x40000000;
static const int E_MIPS_ARCH_32 = 0x50000000;
static const int E_MIPS_ARCH_64 = 0x60000000;
static const int SHN_MIPS_ACOMMON = 0xff00;
static const int SHN_MIPS_TEXT = 0xff01;
static const int SHN_MIPS_DATA = 0xff02;
static const int SHN_MIPS_SCOMMON = 0xff03;
static const int SHN_MIPS_SUNDEFINED = 0xff04;
static const int SHT_MIPS_LIBLIST = 0x70000000;
static const int SHT_MIPS_MSYM = 0x70000001;
static const int SHT_MIPS_CONFLICT = 0x70000002;
static const int SHT_MIPS_GPTAB = 0x70000003;
static const int SHT_MIPS_UCODE = 0x70000004;
static const int SHT_MIPS_DEBUG = 0x70000005;
static const int SHT_MIPS_REGINFO = 0x70000006;
static const int SHT_MIPS_PACKAGE = 0x70000007;
static const int SHT_MIPS_PACKSYM = 0x70000008;
static const int SHT_MIPS_RELD = 0x70000009;
static const int SHT_MIPS_IFACE = 0x7000000b;
static const int SHT_MIPS_CONTENT = 0x7000000c;
static const int SHT_MIPS_OPTIONS = 0x7000000d;
static const int SHT_MIPS_SHDR = 0x70000010;
static const int SHT_MIPS_FDESC = 0x70000011;
static const int SHT_MIPS_EXTSYM = 0x70000012;
static const int SHT_MIPS_DENSE = 0x70000013;
static const int SHT_MIPS_PDESC = 0x70000014;
static const int SHT_MIPS_LOCSYM = 0x70000015;
static const int SHT_MIPS_AUXSYM = 0x70000016;
static const int SHT_MIPS_OPTSYM = 0x70000017;
static const int SHT_MIPS_LOCSTR = 0x70000018;
static const int SHT_MIPS_LINE = 0x70000019;
static const int SHT_MIPS_RFDESC = 0x7000001a;
static const int SHT_MIPS_DELTASYM = 0x7000001b;
static const int SHT_MIPS_DELTAINST = 0x7000001c;
static const int SHT_MIPS_DELTACLASS = 0x7000001d;
static const int SHT_MIPS_DWARF = 0x7000001e;
static const int SHT_MIPS_DELTADECL = 0x7000001f;
static const int SHT_MIPS_SYMBOL_LIB = 0x70000020;
static const int SHT_MIPS_EVENTS = 0x70000021;
static const int SHT_MIPS_TRANSLATE = 0x70000022;
static const int SHT_MIPS_PIXIE = 0x70000023;
static const int SHT_MIPS_XLATE = 0x70000024;
static const int SHT_MIPS_XLATE_DEBUG = 0x70000025;
static const int SHT_MIPS_WHIRL = 0x70000026;
static const int SHT_MIPS_EH_REGION = 0x70000027;
static const int SHT_MIPS_XLATE_OLD = 0x70000028;
static const int SHT_MIPS_PDR_EXCEPTION = 0x70000029;
static const int SHF_MIPS_GPREL = 0x10000000;
static const int SHF_MIPS_MERGE = 0x20000000;
static const int SHF_MIPS_ADDR = 0x40000000;
static const int SHF_MIPS_STRINGS = 0x80000000;
static const int SHF_MIPS_NOSTRIP = 0x08000000;
static const int SHF_MIPS_LOCAL = 0x04000000;
static const int SHF_MIPS_NAMES = 0x02000000;
static const int SHF_MIPS_NODUPE = 0x01000000;
static const int STO_MIPS_DEFAULT = 0x0;
static const int STO_MIPS_INTERNAL = 0x1;
static const int STO_MIPS_HIDDEN = 0x2;
static const int STO_MIPS_PROTECTED = 0x3;
static const int STO_MIPS_PLT = 0x8;
static const int STO_MIPS_SC_ALIGN_UNUSED = 0xff;
]]

ffi.cdef[[
typedef union {
  struct {
      Elf32_Word gt_current_g_value;
      Elf32_Word gt_unused;
  } gt_header;
  struct {
      Elf32_Word gt_g_value;
      Elf32_Word gt_bytes;
  } gt_entry;
} Elf32_gptab;
typedef struct {
  Elf32_Word	ri_gprmask;
  Elf32_Word	ri_cprmask[4];
  Elf32_Sword	ri_gp_value;
} Elf32_RegInfo;
typedef struct {
  unsigned char kind;
  unsigned char size;
  Elf32_Section section;
  Elf32_Word info;
} Elf_Options;
]]

ffi.cdef[[
static const int ODK_NULL = 0;
static const int ODK_REGINFO = 1;
static const int ODK_EXCEPTIONS = 2;
static const int ODK_PAD = 3;
static const int ODK_HWPATCH = 4;
static const int ODK_FILL = 5;
static const int ODK_TAGS = 6;
static const int ODK_HWAND = 7;
static const int ODK_HWOR = 8;
static const int OEX_FPU_MIN = 0x1f;
static const int OEX_FPU_MAX = 0x1f00;
static const int OEX_PAGE0 = 0x10000;
static const int OEX_SMM = 0x20000;
static const int OEX_FPDBUG = 0x40000;
static const int OEX_PRECISEFP = OEX_FPDBUG;
static const int OEX_DISMISS = 0x80000;
static const int OEX_FPU_INVAL = 0x10;
static const int OEX_FPU_DIV0 = 0x08;
static const int OEX_FPU_OFLO = 0x04;
static const int OEX_FPU_UFLO = 0x02;
static const int OEX_FPU_INEX = 0x01;
static const int OHW_R4KEOP = 0x1;
static const int OHW_R8KPFETCH = 0x2;
static const int OHW_R5KEOP = 0x4;
static const int OHW_R5KCVTL = 0x8;
static const int OPAD_PREFIX = 0x1;
static const int OPAD_POSTFIX = 0x2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word hwp_flags1;
  Elf32_Word hwp_flags2;
} Elf_Options_Hw;
]]

ffi.cdef[[
static const int OHWA0_R4KEOP_CHECKED = 0x00000001;
static const int OHWA1_R4KEOP_CLEAN = 0x00000002;
static const int R_MIPS_NONE = 0;
static const int R_MIPS_16 = 1;
static const int R_MIPS_32 = 2;
static const int R_MIPS_REL32 = 3;
static const int R_MIPS_26 = 4;
static const int R_MIPS_HI16 = 5;
static const int R_MIPS_LO16 = 6;
static const int R_MIPS_GPREL16 = 7;
static const int R_MIPS_LITERAL = 8;
static const int R_MIPS_GOT16 = 9;
static const int R_MIPS_PC16 = 10;
static const int R_MIPS_CALL16 = 11;
static const int R_MIPS_GPREL32 = 12;
static const int R_MIPS_SHIFT5 = 16;
static const int R_MIPS_SHIFT6 = 17;
static const int R_MIPS_64 = 18;
static const int R_MIPS_GOT_DISP = 19;
static const int R_MIPS_GOT_PAGE = 20;
static const int R_MIPS_GOT_OFST = 21;
static const int R_MIPS_GOT_HI16 = 22;
static const int R_MIPS_GOT_LO16 = 23;
static const int R_MIPS_SUB = 24;
static const int R_MIPS_INSERT_A = 25;
static const int R_MIPS_INSERT_B = 26;
static const int R_MIPS_DELETE = 27;
static const int R_MIPS_HIGHER = 28;
static const int R_MIPS_HIGHEST = 29;
static const int R_MIPS_CALL_HI16 = 30;
static const int R_MIPS_CALL_LO16 = 31;
static const int R_MIPS_SCN_DISP = 32;
static const int R_MIPS_REL16 = 33;
static const int R_MIPS_ADD_IMMEDIATE = 34;
static const int R_MIPS_PJUMP = 35;
static const int R_MIPS_RELGOT = 36;
static const int R_MIPS_JALR = 37;
static const int R_MIPS_TLS_DTPMOD32 = 38;
static const int R_MIPS_TLS_DTPREL32 = 39;
static const int R_MIPS_TLS_DTPMOD64 = 40;
static const int R_MIPS_TLS_DTPREL64 = 41;
static const int R_MIPS_TLS_GD = 42;
static const int R_MIPS_TLS_LDM = 43;
static const int R_MIPS_TLS_DTPREL_HI16 = 44;
static const int R_MIPS_TLS_DTPREL_LO16 = 45;
static const int R_MIPS_TLS_GOTTPREL = 46;
static const int R_MIPS_TLS_TPREL32 = 47;
static const int R_MIPS_TLS_TPREL64 = 48;
static const int R_MIPS_TLS_TPREL_HI16 = 49;
static const int R_MIPS_TLS_TPREL_LO16 = 50;
static const int R_MIPS_GLOB_DAT = 51;
static const int R_MIPS_COPY = 126;
static const int R_MIPS_JUMP_SLOT = 127;
static const int R_MIPS_NUM = 128;
static const int PT_MIPS_REGINFO = 0x70000000;
static const int PT_MIPS_RTPROC = 0x70000001;
static const int PT_MIPS_OPTIONS = 0x70000002;
static const int PF_MIPS_LOCAL = 0x10000000;
static const int DT_MIPS_RLD_VERSION = 0x70000001;
static const int DT_MIPS_TIME_STAMP = 0x70000002;
static const int DT_MIPS_ICHECKSUM = 0x70000003;
static const int DT_MIPS_IVERSION = 0x70000004;
static const int DT_MIPS_FLAGS = 0x70000005;
static const int DT_MIPS_BASE_ADDRESS = 0x70000006;
static const int DT_MIPS_MSYM = 0x70000007;
static const int DT_MIPS_CONFLICT = 0x70000008;
static const int DT_MIPS_LIBLIST = 0x70000009;
static const int DT_MIPS_LOCAL_GOTNO = 0x7000000a;
static const int DT_MIPS_CONFLICTNO = 0x7000000b;
static const int DT_MIPS_LIBLISTNO = 0x70000010;
static const int DT_MIPS_SYMTABNO = 0x70000011;
static const int DT_MIPS_UNREFEXTNO = 0x70000012;
static const int DT_MIPS_GOTSYM = 0x70000013;
static const int DT_MIPS_HIPAGENO = 0x70000014;
static const int DT_MIPS_RLD_MAP = 0x70000016;
static const int DT_MIPS_DELTA_CLASS = 0x70000017;
static const int DT_MIPS_DELTA_CLASS_NO = 0x70000018;
static const int DT_MIPS_DELTA_INSTANCE = 0x70000019;
static const int DT_MIPS_DELTA_INSTANCE_NO = 0x7000001a;
static const int DT_MIPS_DELTA_RELOC = 0x7000001b;
static const int DT_MIPS_DELTA_RELOC_NO = 0x7000001c;
static const int DT_MIPS_DELTA_SYM = 0x7000001d;
static const int DT_MIPS_DELTA_SYM_NO = 0x7000001e;
static const int DT_MIPS_DELTA_CLASSSYM = 0x70000020;
static const int DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021;
static const int DT_MIPS_CXX_FLAGS = 0x70000022;
static const int DT_MIPS_PIXIE_INIT = 0x70000023;
static const int DT_MIPS_SYMBOL_LIB = 0x70000024;
static const int DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025;
static const int DT_MIPS_LOCAL_GOTIDX = 0x70000026;
static const int DT_MIPS_HIDDEN_GOTIDX = 0x70000027;
static const int DT_MIPS_PROTECTED_GOTIDX = 0x70000028;
static const int DT_MIPS_OPTIONS = 0x70000029;
static const int DT_MIPS_INTERFACE = 0x7000002a;
static const int DT_MIPS_DYNSTR_ALIGN = 0x7000002b;
static const int DT_MIPS_INTERFACE_SIZE = 0x7000002c;
static const int DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002d;
static const int DT_MIPS_PERF_SUFFIX = 0x7000002e;
static const int DT_MIPS_COMPACT_SIZE = 0x7000002f;
static const int DT_MIPS_GP_VALUE = 0x70000030;
static const int DT_MIPS_AUX_DYNAMIC = 0x70000031;
static const int DT_MIPS_PLTGOT = 0x70000032;
static const int DT_MIPS_RWPLT = 0x70000034;
static const int RHF_NONE = 0;
]]


ffi.cdef[[
typedef struct
{
  Elf32_Word l_name;
  Elf32_Word l_time_stamp;
  Elf32_Word l_checksum;
  Elf32_Word l_version;
  Elf32_Word l_flags;
} Elf32_Lib;
typedef struct
{
  Elf64_Word l_name;
  Elf64_Word l_time_stamp;
  Elf64_Word l_checksum;
  Elf64_Word l_version;
  Elf64_Word l_flags;
} Elf64_Lib;
]]

ffi.cdef[[
static const int LL_NONE = 0;
]]


ffi.cdef[[
typedef Elf32_Addr Elf32_Conflict;
]]

ffi.cdef[[
static const int EF_PARISC_TRAPNIL = 0x00010000;
static const int EF_PARISC_EXT = 0x00020000;
static const int EF_PARISC_LSB = 0x00040000;
static const int EF_PARISC_WIDE = 0x00080000;
static const int EF_PARISC_NO_KABP = 0x00100000;
static const int EF_PARISC_LAZYSWAP = 0x00400000;
static const int EF_PARISC_ARCH = 0x0000ffff;
static const int EFA_PARISC_1_0 = 0x020b;
static const int EFA_PARISC_1_1 = 0x0210;
static const int EFA_PARISC_2_0 = 0x0214;
static const int SHN_PARISC_ANSI_COMMON = 0xff00;
static const int SHN_PARISC_HUGE_COMMON = 0xff01;
static const int SHT_PARISC_EXT = 0x70000000;
static const int SHT_PARISC_UNWIND = 0x70000001;
static const int SHT_PARISC_DOC = 0x70000002;
static const int SHF_PARISC_SHORT = 0x20000000;
static const int SHF_PARISC_HUGE = 0x40000000;
static const int SHF_PARISC_SBP = 0x80000000;
static const int STT_PARISC_MILLICODE = 13;
static const int R_PARISC_NONE = 0;
static const int R_PARISC_DIR32 = 1;
static const int R_PARISC_DIR21L = 2;
static const int R_PARISC_DIR17R = 3;
static const int R_PARISC_DIR17F = 4;
static const int R_PARISC_DIR14R = 6;
static const int R_PARISC_PCREL32 = 9;
static const int R_PARISC_PCREL21L = 10;
static const int R_PARISC_PCREL17R = 11;
static const int R_PARISC_PCREL17F = 12;
static const int R_PARISC_PCREL14R = 14;
static const int R_PARISC_DPREL21L = 18;
static const int R_PARISC_DPREL14R = 22;
static const int R_PARISC_GPREL21L = 26;
static const int R_PARISC_GPREL14R = 30;
static const int R_PARISC_LTOFF21L = 34;
static const int R_PARISC_LTOFF14R = 38;
static const int R_PARISC_SECREL32 = 41;
static const int R_PARISC_SEGBASE = 48;
static const int R_PARISC_SEGREL32 = 49;
static const int R_PARISC_PLTOFF21L = 50;
static const int R_PARISC_PLTOFF14R = 54;
static const int R_PARISC_LTOFF_FPTR32 = 57;
static const int R_PARISC_LTOFF_FPTR21L = 58;
static const int R_PARISC_LTOFF_FPTR14R = 62;
static const int R_PARISC_FPTR64 = 64;
static const int R_PARISC_PLABEL32 = 65;
static const int R_PARISC_PLABEL21L = 66;
static const int R_PARISC_PLABEL14R = 70;
static const int R_PARISC_PCREL64 = 72;
static const int R_PARISC_PCREL22F = 74;
static const int R_PARISC_PCREL14WR = 75;
static const int R_PARISC_PCREL14DR = 76;
static const int R_PARISC_PCREL16F = 77;
static const int R_PARISC_PCREL16WF = 78;
static const int R_PARISC_PCREL16DF = 79;
static const int R_PARISC_DIR64 = 80;
static const int R_PARISC_DIR14WR = 83;
static const int R_PARISC_DIR14DR = 84;
static const int R_PARISC_DIR16F = 85;
static const int R_PARISC_DIR16WF = 86;
static const int R_PARISC_DIR16DF = 87;
static const int R_PARISC_GPREL64 = 88;
static const int R_PARISC_GPREL14WR = 91;
static const int R_PARISC_GPREL14DR = 92;
static const int R_PARISC_GPREL16F = 93;
static const int R_PARISC_GPREL16WF = 94;
static const int R_PARISC_GPREL16DF = 95;
static const int R_PARISC_LTOFF64 = 96;
static const int R_PARISC_LTOFF14WR = 99;
static const int R_PARISC_LTOFF14DR = 100;
static const int R_PARISC_LTOFF16F = 101;
static const int R_PARISC_LTOFF16WF = 102;
static const int R_PARISC_LTOFF16DF = 103;
static const int R_PARISC_SECREL64 = 104;
static const int R_PARISC_SEGREL64 = 112;
static const int R_PARISC_PLTOFF14WR = 115;
static const int R_PARISC_PLTOFF14DR = 116;
static const int R_PARISC_PLTOFF16F = 117;
static const int R_PARISC_PLTOFF16WF = 118;
static const int R_PARISC_PLTOFF16DF = 119;
static const int R_PARISC_LTOFF_FPTR64 = 120;
static const int R_PARISC_LTOFF_FPTR14WR = 123;
static const int R_PARISC_LTOFF_FPTR14DR = 124;
static const int R_PARISC_LTOFF_FPTR16F = 125;
static const int R_PARISC_LTOFF_FPTR16WF = 126;
static const int R_PARISC_LTOFF_FPTR16DF = 127;
static const int R_PARISC_LORESERVE = 128;
static const int R_PARISC_COPY = 128;
static const int R_PARISC_IPLT = 129;
static const int R_PARISC_EPLT = 130;
static const int R_PARISC_TPREL32 = 153;
static const int R_PARISC_TPREL21L = 154;
static const int R_PARISC_TPREL14R = 158;
static const int R_PARISC_LTOFF_TP21L = 162;
static const int R_PARISC_LTOFF_TP14R = 166;
static const int R_PARISC_LTOFF_TP14F = 167;
static const int R_PARISC_TPREL64 = 216;
static const int R_PARISC_TPREL14WR = 219;
static const int R_PARISC_TPREL14DR = 220;
static const int R_PARISC_TPREL16F = 221;
static const int R_PARISC_TPREL16WF = 222;
static const int R_PARISC_TPREL16DF = 223;
static const int R_PARISC_LTOFF_TP64 = 224;
static const int R_PARISC_LTOFF_TP14WR = 227;
static const int R_PARISC_LTOFF_TP14DR = 228;
static const int R_PARISC_LTOFF_TP16F = 229;
static const int R_PARISC_LTOFF_TP16WF = 230;
static const int R_PARISC_LTOFF_TP16DF = 231;
static const int R_PARISC_GNU_VTENTRY = 232;
static const int R_PARISC_GNU_VTINHERIT = 233;
static const int R_PARISC_TLS_GD21L = 234;
static const int R_PARISC_TLS_GD14R = 235;
static const int R_PARISC_TLS_GDCALL = 236;
static const int R_PARISC_TLS_LDM21L = 237;
static const int R_PARISC_TLS_LDM14R = 238;
static const int R_PARISC_TLS_LDMCALL = 239;
static const int R_PARISC_TLS_LDO21L = 240;
static const int R_PARISC_TLS_LDO14R = 241;
static const int R_PARISC_TLS_DTPMOD32 = 242;
static const int R_PARISC_TLS_DTPMOD64 = 243;
static const int R_PARISC_TLS_DTPOFF32 = 244;
static const int R_PARISC_TLS_DTPOFF64 = 245;
static const int R_PARISC_TLS_LE21L = R_PARISC_TPREL21L;
static const int R_PARISC_TLS_LE14R = R_PARISC_TPREL14R;
static const int R_PARISC_TLS_IE21L = R_PARISC_LTOFF_TP21L;
static const int R_PARISC_TLS_IE14R = R_PARISC_LTOFF_TP14R;
static const int R_PARISC_TLS_TPREL32 = R_PARISC_TPREL32;
static const int R_PARISC_TLS_TPREL64 = R_PARISC_TPREL64;
static const int R_PARISC_HIRESERVE = 255;
static const int PT_PARISC_ARCHEXT = 0x70000000;
static const int PT_PARISC_UNWIND = 0x70000001;
static const int PF_PARISC_SBP = 0x08000000;
static const int PF_HP_PAGE_SIZE = 0x00100000;
static const int PF_HP_FAR_SHARED = 0x00200000;
static const int PF_HP_NEAR_SHARED = 0x00400000;
static const int PF_HP_CODE = 0x01000000;
static const int PF_HP_MODIFY = 0x02000000;
static const int PF_HP_LAZYSWAP = 0x04000000;
static const int PF_HP_SBP = 0x08000000;
static const int EF_ALPHA_32BIT = 1;
static const int EF_ALPHA_CANRELAX = 2;
static const int SHT_ALPHA_DEBUG = 0x70000001;
static const int SHT_ALPHA_REGINFO = 0x70000002;
static const int SHF_ALPHA_GPREL = 0x10000000;
static const int STO_ALPHA_NOPV = 0x80;
static const int STO_ALPHA_STD_GPLOAD = 0x88;
static const int R_ALPHA_NONE = 0;
static const int R_ALPHA_REFLONG = 1;
static const int R_ALPHA_REFQUAD = 2;
static const int R_ALPHA_GPREL32 = 3;
static const int R_ALPHA_LITERAL = 4;
static const int R_ALPHA_LITUSE = 5;
static const int R_ALPHA_GPDISP = 6;
static const int R_ALPHA_BRADDR = 7;
static const int R_ALPHA_HINT = 8;
static const int R_ALPHA_SREL16 = 9;
static const int R_ALPHA_SREL32 = 10;
static const int R_ALPHA_SREL64 = 11;
static const int R_ALPHA_GPRELHIGH = 17;
static const int R_ALPHA_GPRELLOW = 18;
static const int R_ALPHA_GPREL16 = 19;
static const int R_ALPHA_COPY = 24;
static const int R_ALPHA_GLOB_DAT = 25;
static const int R_ALPHA_JMP_SLOT = 26;
static const int R_ALPHA_RELATIVE = 27;
static const int R_ALPHA_TLS_GD_HI = 28;
static const int R_ALPHA_TLSGD = 29;
static const int R_ALPHA_TLS_LDM = 30;
static const int R_ALPHA_DTPMOD64 = 31;
static const int R_ALPHA_GOTDTPREL = 32;
static const int R_ALPHA_DTPREL64 = 33;
static const int R_ALPHA_DTPRELHI = 34;
static const int R_ALPHA_DTPRELLO = 35;
static const int R_ALPHA_DTPREL16 = 36;
static const int R_ALPHA_GOTTPREL = 37;
static const int R_ALPHA_TPREL64 = 38;
static const int R_ALPHA_TPRELHI = 39;
static const int R_ALPHA_TPRELLO = 40;
static const int R_ALPHA_TPREL16 = 41;
static const int R_ALPHA_NUM = 46;
static const int LITUSE_ALPHA_ADDR = 0;
static const int LITUSE_ALPHA_BASE = 1;
static const int LITUSE_ALPHA_BYTOFF = 2;
static const int LITUSE_ALPHA_JSR = 3;
static const int LITUSE_ALPHA_TLS_GD = 4;
static const int LITUSE_ALPHA_TLS_LDM = 5;
static const int DT_ALPHA_NUM = 1;
static const int EF_PPC_EMB = 0x80000000;
static const int EF_PPC_RELOCATABLE = 0x00010000;
static const int EF_PPC_RELOCATABLE_LIB = 0x00008000;
static const int R_PPC_NONE = 0;
static const int R_PPC_ADDR32 = 1;
static const int R_PPC_ADDR24 = 2;
static const int R_PPC_ADDR16 = 3;
static const int R_PPC_ADDR16_LO = 4;
static const int R_PPC_ADDR16_HI = 5;
static const int R_PPC_ADDR16_HA = 6;
static const int R_PPC_ADDR14 = 7;
static const int R_PPC_ADDR14_BRTAKEN = 8;
static const int R_PPC_ADDR14_BRNTAKEN = 9;
static const int R_PPC_REL24 = 10;
static const int R_PPC_REL14 = 11;
static const int R_PPC_REL14_BRTAKEN = 12;
static const int R_PPC_REL14_BRNTAKEN = 13;
static const int R_PPC_GOT16 = 14;
static const int R_PPC_GOT16_LO = 15;
static const int R_PPC_GOT16_HI = 16;
static const int R_PPC_GOT16_HA = 17;
static const int R_PPC_PLTREL24 = 18;
static const int R_PPC_COPY = 19;
static const int R_PPC_GLOB_DAT = 20;
static const int R_PPC_JMP_SLOT = 21;
static const int R_PPC_RELATIVE = 22;
static const int R_PPC_LOCAL24PC = 23;
static const int R_PPC_UADDR32 = 24;
static const int R_PPC_UADDR16 = 25;
static const int R_PPC_REL32 = 26;
static const int R_PPC_PLT32 = 27;
static const int R_PPC_PLTREL32 = 28;
static const int R_PPC_PLT16_LO = 29;
static const int R_PPC_PLT16_HI = 30;
static const int R_PPC_PLT16_HA = 31;
static const int R_PPC_SDAREL16 = 32;
static const int R_PPC_SECTOFF = 33;
static const int R_PPC_SECTOFF_LO = 34;
static const int R_PPC_SECTOFF_HI = 35;
static const int R_PPC_SECTOFF_HA = 36;
static const int R_PPC_TLS = 67;
static const int R_PPC_DTPMOD32 = 68;
static const int R_PPC_TPREL16 = 69;
static const int R_PPC_TPREL16_LO = 70;
static const int R_PPC_TPREL16_HI = 71;
static const int R_PPC_TPREL16_HA = 72;
static const int R_PPC_TPREL32 = 73;
static const int R_PPC_DTPREL16 = 74;
static const int R_PPC_DTPREL16_LO = 75;
static const int R_PPC_DTPREL16_HI = 76;
static const int R_PPC_DTPREL16_HA = 77;
static const int R_PPC_DTPREL32 = 78;
static const int R_PPC_GOT_TLSGD16 = 79;
static const int R_PPC_GOT_TLSGD16_LO = 80;
static const int R_PPC_GOT_TLSGD16_HI = 81;
static const int R_PPC_GOT_TLSGD16_HA = 82;
static const int R_PPC_GOT_TLSLD16 = 83;
static const int R_PPC_GOT_TLSLD16_LO = 84;
static const int R_PPC_GOT_TLSLD16_HI = 85;
static const int R_PPC_GOT_TLSLD16_HA = 86;
static const int R_PPC_GOT_TPREL16 = 87;
static const int R_PPC_GOT_TPREL16_LO = 88;
static const int R_PPC_GOT_TPREL16_HI = 89;
static const int R_PPC_GOT_TPREL16_HA = 90;
static const int R_PPC_GOT_DTPREL16 = 91;
static const int R_PPC_GOT_DTPREL16_LO = 92;
static const int R_PPC_GOT_DTPREL16_HI = 93;
static const int R_PPC_GOT_DTPREL16_HA = 94;
static const int R_PPC_EMB_NADDR32 = 101;
static const int R_PPC_EMB_NADDR16 = 102;
static const int R_PPC_EMB_NADDR16_LO = 103;
static const int R_PPC_EMB_NADDR16_HI = 104;
static const int R_PPC_EMB_NADDR16_HA = 105;
static const int R_PPC_EMB_SDAI16 = 106;
static const int R_PPC_EMB_SDA2I16 = 107;
static const int R_PPC_EMB_SDA2REL = 108;
static const int R_PPC_EMB_SDA21 = 109;
static const int R_PPC_EMB_MRKREF = 110;
static const int R_PPC_EMB_RELSEC16 = 111;
static const int R_PPC_EMB_RELST_LO = 112;
static const int R_PPC_EMB_RELST_HI = 113;
static const int R_PPC_EMB_RELST_HA = 114;
static const int R_PPC_EMB_BIT_FLD = 115;
static const int R_PPC_EMB_RELSDA = 116;
static const int R_PPC_DIAB_SDA21_LO = 180;
static const int R_PPC_DIAB_SDA21_HI = 181;
static const int R_PPC_DIAB_SDA21_HA = 182;
static const int R_PPC_DIAB_RELSDA_LO = 183;
static const int R_PPC_DIAB_RELSDA_HI = 184;
static const int R_PPC_DIAB_RELSDA_HA = 185;
static const int R_PPC_IRELATIVE = 248;
static const int R_PPC_REL16 = 249;
static const int R_PPC_REL16_LO = 250;
static const int R_PPC_REL16_HI = 251;
static const int R_PPC_REL16_HA = 252;
static const int R_PPC_TOC16 = 255;
static const int DT_PPC_NUM = 1;
static const int R_PPC64_NONE = R_PPC_NONE;
static const int R_PPC64_ADDR32 = R_PPC_ADDR32;
static const int R_PPC64_ADDR24 = R_PPC_ADDR24;
static const int R_PPC64_ADDR16 = R_PPC_ADDR16;
static const int R_PPC64_ADDR16_LO = R_PPC_ADDR16_LO;
static const int R_PPC64_ADDR16_HI = R_PPC_ADDR16_HI;
static const int R_PPC64_ADDR16_HA = R_PPC_ADDR16_HA;
static const int R_PPC64_ADDR14 = R_PPC_ADDR14;
static const int R_PPC64_ADDR14_BRTAKEN = R_PPC_ADDR14_BRTAKEN;
static const int R_PPC64_ADDR14_BRNTAKEN = R_PPC_ADDR14_BRNTAKEN;
static const int R_PPC64_REL24 = R_PPC_REL24;
static const int R_PPC64_REL14 = R_PPC_REL14;
static const int R_PPC64_REL14_BRTAKEN = R_PPC_REL14_BRTAKEN;
static const int R_PPC64_REL14_BRNTAKEN = R_PPC_REL14_BRNTAKEN;
static const int R_PPC64_GOT16 = R_PPC_GOT16;
static const int R_PPC64_GOT16_LO = R_PPC_GOT16_LO;
static const int R_PPC64_GOT16_HI = R_PPC_GOT16_HI;
static const int R_PPC64_GOT16_HA = R_PPC_GOT16_HA;
static const int R_PPC64_COPY = R_PPC_COPY;
static const int R_PPC64_GLOB_DAT = R_PPC_GLOB_DAT;
static const int R_PPC64_JMP_SLOT = R_PPC_JMP_SLOT;
static const int R_PPC64_RELATIVE = R_PPC_RELATIVE;
static const int R_PPC64_UADDR32 = R_PPC_UADDR32;
static const int R_PPC64_UADDR16 = R_PPC_UADDR16;
static const int R_PPC64_REL32 = R_PPC_REL32;
static const int R_PPC64_PLT32 = R_PPC_PLT32;
static const int R_PPC64_PLTREL32 = R_PPC_PLTREL32;
static const int R_PPC64_PLT16_LO = R_PPC_PLT16_LO;
static const int R_PPC64_PLT16_HI = R_PPC_PLT16_HI;
static const int R_PPC64_PLT16_HA = R_PPC_PLT16_HA;
static const int R_PPC64_SECTOFF = R_PPC_SECTOFF;
static const int R_PPC64_SECTOFF_LO = R_PPC_SECTOFF_LO;
static const int R_PPC64_SECTOFF_HI = R_PPC_SECTOFF_HI;
static const int R_PPC64_SECTOFF_HA = R_PPC_SECTOFF_HA;
static const int R_PPC64_ADDR30 = 37;
static const int R_PPC64_ADDR64 = 38;
static const int R_PPC64_ADDR16_HIGHER = 39;
static const int R_PPC64_ADDR16_HIGHERA = 40;
static const int R_PPC64_ADDR16_HIGHEST = 41;
static const int R_PPC64_ADDR16_HIGHESTA = 42;
static const int R_PPC64_UADDR64 = 43;
static const int R_PPC64_REL64 = 44;
static const int R_PPC64_PLT64 = 45;
static const int R_PPC64_PLTREL64 = 46;
static const int R_PPC64_TOC16 = 47;
static const int R_PPC64_TOC16_LO = 48;
static const int R_PPC64_TOC16_HI = 49;
static const int R_PPC64_TOC16_HA = 50;
static const int R_PPC64_TOC = 51;
static const int R_PPC64_PLTGOT16 = 52;
static const int R_PPC64_PLTGOT16_LO = 53;
static const int R_PPC64_PLTGOT16_HI = 54;
static const int R_PPC64_PLTGOT16_HA = 55;
static const int R_PPC64_ADDR16_DS = 56;
static const int R_PPC64_ADDR16_LO_DS = 57;
static const int R_PPC64_GOT16_DS = 58;
static const int R_PPC64_GOT16_LO_DS = 59;
static const int R_PPC64_PLT16_LO_DS = 60;
static const int R_PPC64_SECTOFF_DS = 61;
static const int R_PPC64_SECTOFF_LO_DS = 62;
static const int R_PPC64_TOC16_DS = 63;
static const int R_PPC64_TOC16_LO_DS = 64;
static const int R_PPC64_PLTGOT16_DS = 65;
static const int R_PPC64_PLTGOT16_LO_DS = 66;
static const int R_PPC64_TLS = 67;
static const int R_PPC64_DTPMOD64 = 68;
static const int R_PPC64_TPREL16 = 69;
static const int R_PPC64_TPREL16_LO = 70;
static const int R_PPC64_TPREL16_HI = 71;
static const int R_PPC64_TPREL16_HA = 72;
static const int R_PPC64_TPREL64 = 73;
static const int R_PPC64_DTPREL16 = 74;
static const int R_PPC64_DTPREL16_LO = 75;
static const int R_PPC64_DTPREL16_HI = 76;
static const int R_PPC64_DTPREL16_HA = 77;
static const int R_PPC64_DTPREL64 = 78;
static const int R_PPC64_GOT_TLSGD16 = 79;
static const int R_PPC64_GOT_TLSGD16_LO = 80;
static const int R_PPC64_GOT_TLSGD16_HI = 81;
static const int R_PPC64_GOT_TLSGD16_HA = 82;
static const int R_PPC64_GOT_TLSLD16 = 83;
static const int R_PPC64_GOT_TLSLD16_LO = 84;
static const int R_PPC64_GOT_TLSLD16_HI = 85;
static const int R_PPC64_GOT_TLSLD16_HA = 86;
static const int R_PPC64_GOT_TPREL16_DS = 87;
static const int R_PPC64_GOT_TPREL16_LO_DS = 88;
static const int R_PPC64_GOT_TPREL16_HI = 89;
static const int R_PPC64_GOT_TPREL16_HA = 90;
static const int R_PPC64_GOT_DTPREL16_DS = 91;
static const int R_PPC64_GOT_DTPREL16_LO_DS = 92;
static const int R_PPC64_GOT_DTPREL16_HI = 93;
static const int R_PPC64_GOT_DTPREL16_HA = 94;
static const int R_PPC64_TPREL16_DS = 95;
static const int R_PPC64_TPREL16_LO_DS = 96;
static const int R_PPC64_TPREL16_HIGHER = 97;
static const int R_PPC64_TPREL16_HIGHERA = 98;
static const int R_PPC64_TPREL16_HIGHEST = 99;
static const int R_PPC64_TPREL16_HIGHESTA = 100;
static const int R_PPC64_DTPREL16_DS = 101;
static const int R_PPC64_DTPREL16_LO_DS = 102;
static const int R_PPC64_DTPREL16_HIGHER = 103;
static const int R_PPC64_DTPREL16_HIGHERA = 104;
static const int R_PPC64_DTPREL16_HIGHEST = 105;
static const int R_PPC64_DTPREL16_HIGHESTA = 106;
static const int R_PPC64_JMP_IREL = 247;
static const int R_PPC64_IRELATIVE = 248;
static const int R_PPC64_REL16 = 249;
static const int R_PPC64_REL16_LO = 250;
static const int R_PPC64_REL16_HI = 251;
static const int R_PPC64_REL16_HA = 252;
static const int DT_PPC64_NUM = 3;
static const int EF_ARM_RELEXEC = 0x01;
static const int EF_ARM_HASENTRY = 0x02;
static const int EF_ARM_INTERWORK = 0x04;
static const int EF_ARM_APCS_26 = 0x08;
static const int EF_ARM_APCS_FLOAT = 0x10;
static const int EF_ARM_PIC = 0x20;
static const int EF_ARM_ALIGN8 = 0x40;
static const int EF_ARM_NEW_ABI = 0x80;
static const int EF_ARM_OLD_ABI = 0x100;
static const int EF_ARM_SOFT_FLOAT = 0x200;
static const int EF_ARM_VFP_FLOAT = 0x400;
static const int EF_ARM_MAVERICK_FLOAT = 0x800;
static const int EF_ARM_ABI_FLOAT_SOFT = 0x200;
static const int EF_ARM_ABI_FLOAT_HARD = 0x400;
static const int EF_ARM_SYMSARESORTED = 0x04;
static const int EF_ARM_DYNSYMSUSESEGIDX = 0x08;
static const int EF_ARM_MAPSYMSFIRST = 0x10;
static const int EF_ARM_EABIMASK = 0XFF000000;
static const int EF_ARM_BE8 = 0x00800000;
static const int EF_ARM_LE8 = 0x00400000;
]]

function E.EF_ARM_EABI_VERSION(flags)	return band(flags, ffi.C.EF_ARM_EABIMASK); end

ffi.cdef[[
static const int EF_ARM_EABI_UNKNOWN = 0x00000000;
static const int EF_ARM_EABI_VER1 = 0x01000000;
static const int EF_ARM_EABI_VER2 = 0x02000000;
static const int EF_ARM_EABI_VER3 = 0x03000000;
static const int EF_ARM_EABI_VER4 = 0x04000000;
static const int EF_ARM_EABI_VER5 = 0x05000000;
static const int STT_ARM_TFUNC = STT_LOPROC;
static const int STT_ARM_16BIT = STT_HIPROC;
static const int SHF_ARM_ENTRYSECT = 0x10000000;
static const int SHF_ARM_COMDEF = 0x80000000;
static const int PF_ARM_SB = 0x10000000;
static const int PF_ARM_PI = 0x20000000;
static const int PF_ARM_ABS = 0x40000000;
static const int R_AARCH64_NONE = 0;
static const int R_AARCH64_ABS64 = 257;
static const int R_AARCH64_ABS32 = 258;
static const int R_AARCH64_ABS16 = 259;
static const int R_AARCH64_PREL64 = 260;
static const int R_AARCH64_PREL32 = 261;
static const int R_AARCH64_PREL16 = 262;
static const int R_AARCH64_MOVW_UABS_G0 = 263;
static const int R_AARCH64_MOVW_UABS_G0_NC = 264;
static const int R_AARCH64_MOVW_UABS_G1 = 265;
static const int R_AARCH64_MOVW_UABS_G1_NC = 266;
static const int R_AARCH64_MOVW_UABS_G2 = 267;
static const int R_AARCH64_MOVW_UABS_G2_NC = 268;
static const int R_AARCH64_MOVW_UABS_G3 = 269;
static const int R_AARCH64_MOVW_SABS_G0 = 270;
static const int R_AARCH64_MOVW_SABS_G1 = 271;
static const int R_AARCH64_MOVW_SABS_G2 = 272;
static const int R_AARCH64_LD_PREL_LO19 = 273;
static const int R_AARCH64_ADR_PREL_LO21 = 274;
static const int R_AARCH64_ADR_PREL_PG_HI21 = 275;
static const int R_AARCH64_ADR_PREL_PG_HI21_NC = 276;
static const int R_AARCH64_ADD_ABS_LO12_NC = 277;
static const int R_AARCH64_LDST8_ABS_LO12_NC = 278;
static const int R_AARCH64_TSTBR14 = 279;
static const int R_AARCH64_CONDBR19 = 280;
static const int R_AARCH64_JUMP26 = 282;
static const int R_AARCH64_CALL26 = 283;
static const int R_AARCH64_LDST16_ABS_LO12_NC = 284;
static const int R_AARCH64_LDST32_ABS_LO12_NC = 285;
static const int R_AARCH64_LDST64_ABS_LO12_NC = 286;
static const int R_AARCH64_MOVW_PREL_G0 = 287;
static const int R_AARCH64_MOVW_PREL_G0_NC = 288;
static const int R_AARCH64_MOVW_PREL_G1 = 289;
static const int R_AARCH64_MOVW_PREL_G1_NC = 290;
static const int R_AARCH64_MOVW_PREL_G2 = 291;
static const int R_AARCH64_MOVW_PREL_G2_NC = 292;
static const int R_AARCH64_MOVW_PREL_G3 = 293;
static const int R_AARCH64_LDST128_ABS_LO12_NC = 299;
static const int R_AARCH64_MOVW_GOTOFF_G0 = 300;
static const int R_AARCH64_MOVW_GOTOFF_G0_NC = 301;
static const int R_AARCH64_MOVW_GOTOFF_G1 = 302;
static const int R_AARCH64_MOVW_GOTOFF_G1_NC = 303;
static const int R_AARCH64_MOVW_GOTOFF_G2 = 304;
static const int R_AARCH64_MOVW_GOTOFF_G2_NC = 305;
static const int R_AARCH64_MOVW_GOTOFF_G3 = 306;
static const int R_AARCH64_GOTREL64 = 307;
static const int R_AARCH64_GOTREL32 = 308;
static const int R_AARCH64_GOT_LD_PREL19 = 309;
static const int R_AARCH64_LD64_GOTOFF_LO15 = 310;
static const int R_AARCH64_ADR_GOT_PAGE = 311;
static const int R_AARCH64_LD64_GOT_LO12_NC = 312;
static const int R_AARCH64_LD64_GOTPAGE_LO15 = 313;
static const int R_AARCH64_TLSGD_ADR_PREL21 = 512;
static const int R_AARCH64_TLSGD_ADR_PAGE21 = 513;
static const int R_AARCH64_TLSGD_ADD_LO12_NC = 514;
static const int R_AARCH64_TLSGD_MOVW_G1 = 515;
static const int R_AARCH64_TLSGD_MOVW_G0_NC = 516;
static const int R_AARCH64_TLSLD_ADR_PREL21 = 517;
static const int R_AARCH64_TLSLD_ADR_PAGE21 = 518;
static const int R_AARCH64_TLSLD_ADD_LO12_NC = 519;
static const int R_AARCH64_TLSLD_MOVW_G1 = 520;
static const int R_AARCH64_TLSLD_MOVW_G0_NC = 521;
static const int R_AARCH64_TLSLD_LD_PREL19 = 522;
static const int R_AARCH64_TLSLD_MOVW_DTPREL_G2 = 523;
static const int R_AARCH64_TLSLD_MOVW_DTPREL_G1 = 524;
static const int R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC = 525;
static const int R_AARCH64_TLSLD_MOVW_DTPREL_G0 = 526;
static const int R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC = 527;
static const int R_AARCH64_TLSLD_ADD_DTPREL_HI12 = 528;
static const int R_AARCH64_TLSLD_ADD_DTPREL_LO12 = 529;
static const int R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC = 530;
static const int R_AARCH64_TLSLD_LDST8_DTPREL_LO12 = 531;
static const int R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC = 532;
static const int R_AARCH64_TLSLD_LDST16_DTPREL_LO12 = 533;
static const int R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC = 534;
static const int R_AARCH64_TLSLD_LDST32_DTPREL_LO12 = 535;
static const int R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC = 536;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12 = 537;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC = 538;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 = 539;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC = 540;
static const int R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 = 541;
static const int R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC = 542;
static const int R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 = 543;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G2 = 544;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1 = 545;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1_NC = 546;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0 = 547;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0_NC = 548;
static const int R_AARCH64_TLSLE_ADD_TPREL_HI12 = 549;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12 = 550;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12_NC = 551;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12 = 552;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC = 553;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12 = 554;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC = 555;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12 = 556;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC = 557;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12 = 558;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC = 559;
static const int R_AARCH64_TLSDESC_LD_PREL19 = 560;
static const int R_AARCH64_TLSDESC_ADR_PREL21 = 561;
static const int R_AARCH64_TLSDESC_ADR_PAGE21 = 562;
static const int R_AARCH64_TLSDESC_LD64_LO12 = 563;
static const int R_AARCH64_TLSDESC_ADD_LO12 = 564;
static const int R_AARCH64_TLSDESC_OFF_G1 = 565;
static const int R_AARCH64_TLSDESC_OFF_G0_NC = 566;
static const int R_AARCH64_TLSDESC_LDR = 567;
static const int R_AARCH64_TLSDESC_ADD = 568;
static const int R_AARCH64_TLSDESC_CALL = 569;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12 = 570;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC = 571;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12 = 572;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573;
static const int R_AARCH64_COPY = 1024;
static const int R_AARCH64_GLOB_DAT = 1025;
static const int R_AARCH64_JUMP_SLOT = 1026;
static const int R_AARCH64_RELATIVE = 1027;
static const int R_AARCH64_TLS_DTPMOD64 = 1028;
static const int R_AARCH64_TLS_DTPREL64 = 1029;
static const int R_AARCH64_TLS_TPREL64 = 1030;
static const int R_AARCH64_TLSDESC = 1031;
static const int R_ARM_NONE = 0;
static const int R_ARM_PC24 = 1;
static const int R_ARM_ABS32 = 2;
static const int R_ARM_REL32 = 3;
static const int R_ARM_PC13 = 4;
static const int R_ARM_ABS16 = 5;
static const int R_ARM_ABS12 = 6;
static const int R_ARM_THM_ABS5 = 7;
static const int R_ARM_ABS8 = 8;
static const int R_ARM_SBREL32 = 9;
static const int R_ARM_THM_PC22 = 10;
static const int R_ARM_THM_PC8 = 11;
static const int R_ARM_AMP_VCALL9 = 12;
static const int R_ARM_TLS_DESC = 13;
static const int R_ARM_THM_SWI8 = 14;
static const int R_ARM_XPC25 = 15;
static const int R_ARM_THM_XPC22 = 16;
static const int R_ARM_TLS_DTPMOD32 = 17;
static const int R_ARM_TLS_DTPOFF32 = 18;
static const int R_ARM_TLS_TPOFF32 = 19;
static const int R_ARM_COPY = 20;
static const int R_ARM_GLOB_DAT = 21;
static const int R_ARM_JUMP_SLOT = 22;
static const int R_ARM_RELATIVE = 23;
static const int R_ARM_GOTOFF = 24;
static const int R_ARM_GOTPC = 25;
static const int R_ARM_GOT32 = 26;
static const int R_ARM_PLT32 = 27;
static const int R_ARM_CALL = 28;
static const int R_ARM_JUMP24 = 29;
static const int R_ARM_THM_JUMP24 = 30;
static const int R_ARM_BASE_ABS = 31;
static const int R_ARM_ALU_PCREL_7_0 = 32;
static const int R_ARM_ALU_PCREL_15_8 = 33;
static const int R_ARM_ALU_PCREL_23_15 = 34;
static const int R_ARM_LDR_SBREL_11_0 = 35;
static const int R_ARM_ALU_SBREL_19_12 = 36;
static const int R_ARM_ALU_SBREL_27_20 = 37;
static const int R_ARM_TARGET1 = 38;
static const int R_ARM_SBREL31 = 39;
static const int R_ARM_V4BX = 40;
static const int R_ARM_TARGET2 = 41;
static const int R_ARM_PREL31 = 42;
static const int R_ARM_MOVW_ABS_NC = 43;
static const int R_ARM_MOVT_ABS = 44;
static const int R_ARM_MOVW_PREL_NC = 45;
static const int R_ARM_MOVT_PREL = 46;
static const int R_ARM_THM_MOVW_ABS_NC = 47;
static const int R_ARM_THM_MOVT_ABS = 48;
static const int R_ARM_THM_MOVW_PREL_NC = 49;
static const int R_ARM_THM_MOVT_PREL = 50;
static const int R_ARM_THM_JUMP19 = 51;
static const int R_ARM_THM_JUMP6 = 52;
static const int R_ARM_THM_ALU_PREL_11_0 = 53;
static const int R_ARM_THM_PC12 = 54;
static const int R_ARM_ABS32_NOI = 55;
static const int R_ARM_REL32_NOI = 56;
static const int R_ARM_ALU_PC_G0_NC = 57;
static const int R_ARM_ALU_PC_G0 = 58;
static const int R_ARM_ALU_PC_G1_NC = 59;
static const int R_ARM_ALU_PC_G1 = 60;
static const int R_ARM_ALU_PC_G2 = 61;
static const int R_ARM_LDR_PC_G1 = 62;
static const int R_ARM_LDR_PC_G2 = 63;
static const int R_ARM_LDRS_PC_G0 = 64;
static const int R_ARM_LDRS_PC_G1 = 65;
static const int R_ARM_LDRS_PC_G2 = 66;
static const int R_ARM_LDC_PC_G0 = 67;
static const int R_ARM_LDC_PC_G1 = 68;
static const int R_ARM_LDC_PC_G2 = 69;
static const int R_ARM_ALU_SB_G0_NC = 70;
static const int R_ARM_ALU_SB_G0 = 71;
static const int R_ARM_ALU_SB_G1_NC = 72;
static const int R_ARM_ALU_SB_G1 = 73;
static const int R_ARM_ALU_SB_G2 = 74;
static const int R_ARM_LDR_SB_G0 = 75;
static const int R_ARM_LDR_SB_G1 = 76;
static const int R_ARM_LDR_SB_G2 = 77;
static const int R_ARM_LDRS_SB_G0 = 78;
static const int R_ARM_LDRS_SB_G1 = 79;
static const int R_ARM_LDRS_SB_G2 = 80;
static const int R_ARM_LDC_SB_G0 = 81;
static const int R_ARM_LDC_SB_G1 = 82;
static const int R_ARM_LDC_SB_G2 = 83;
static const int R_ARM_MOVW_BREL_NC = 84;
static const int R_ARM_MOVT_BREL = 85;
static const int R_ARM_MOVW_BREL = 86;
static const int R_ARM_THM_MOVW_BREL_NC = 87;
static const int R_ARM_THM_MOVT_BREL = 88;
static const int R_ARM_THM_MOVW_BREL = 89;
static const int R_ARM_TLS_GOTDESC = 90;
static const int R_ARM_TLS_CALL = 91;
static const int R_ARM_TLS_DESCSEQ = 92;
static const int R_ARM_THM_TLS_CALL = 93;
static const int R_ARM_PLT32_ABS = 94;
static const int R_ARM_GOT_ABS = 95;
static const int R_ARM_GOT_PREL = 96;
static const int R_ARM_GOT_BREL12 = 97;
static const int R_ARM_GOTOFF12 = 98;
static const int R_ARM_GOTRELAX = 99;
static const int R_ARM_GNU_VTENTRY = 100;
static const int R_ARM_GNU_VTINHERIT = 101;
static const int R_ARM_THM_PC11 = 102;
static const int R_ARM_THM_PC9 = 103;
static const int R_ARM_TLS_GD32 = 104;
static const int R_ARM_TLS_LDM32 = 105;
static const int R_ARM_TLS_LDO32 = 106;
static const int R_ARM_TLS_IE32 = 107;
static const int R_ARM_TLS_LE32 = 108;
static const int R_ARM_TLS_LDO12 = 109;
static const int R_ARM_TLS_LE12 = 110;
static const int R_ARM_TLS_IE12GP = 111;
static const int R_ARM_ME_TOO = 128;
static const int R_ARM_THM_TLS_DESCSEQ = 129;
static const int R_ARM_THM_TLS_DESCSEQ16 = 129;
static const int R_ARM_THM_TLS_DESCSEQ32 = 130;
static const int R_ARM_THM_GOT_BREL12 = 131;
static const int R_ARM_IRELATIVE = 160;
static const int R_ARM_RXPC25 = 249;
static const int R_ARM_RSBREL32 = 250;
static const int R_ARM_THM_RPC22 = 251;
static const int R_ARM_RREL32 = 252;
static const int R_ARM_RABS22 = 253;
static const int R_ARM_RPC24 = 254;
static const int R_ARM_RBASE = 255;
static const int R_ARM_NUM = 256;
static const int EF_IA_64_MASKOS = 0x0000000f;
static const int EF_IA_64_ABI64 = 0x00000010;
static const int EF_IA_64_ARCH = 0xff000000;
static const int PF_IA_64_NORECOV = 0x80000000;
static const int SHF_IA_64_SHORT = 0x10000000;
static const int SHF_IA_64_NORECOV = 0x20000000;
static const int DT_IA_64_NUM = 1;
static const int R_IA64_NONE = 0x00;
static const int R_IA64_IMM14 = 0x21;
static const int R_IA64_IMM22 = 0x22;
static const int R_IA64_IMM64 = 0x23;
static const int R_IA64_DIR32MSB = 0x24;
static const int R_IA64_DIR32LSB = 0x25;
static const int R_IA64_DIR64MSB = 0x26;
static const int R_IA64_DIR64LSB = 0x27;
static const int R_IA64_GPREL22 = 0x2a;
static const int R_IA64_GPREL64I = 0x2b;
static const int R_IA64_GPREL32MSB = 0x2c;
static const int R_IA64_GPREL32LSB = 0x2d;
static const int R_IA64_GPREL64MSB = 0x2e;
static const int R_IA64_GPREL64LSB = 0x2f;
static const int R_IA64_LTOFF22 = 0x32;
static const int R_IA64_LTOFF64I = 0x33;
static const int R_IA64_PLTOFF22 = 0x3a;
static const int R_IA64_PLTOFF64I = 0x3b;
static const int R_IA64_PLTOFF64MSB = 0x3e;
static const int R_IA64_PLTOFF64LSB = 0x3f;
static const int R_IA64_FPTR64I = 0x43;
static const int R_IA64_FPTR32MSB = 0x44;
static const int R_IA64_FPTR32LSB = 0x45;
static const int R_IA64_FPTR64MSB = 0x46;
static const int R_IA64_FPTR64LSB = 0x47;
static const int R_IA64_PCREL60B = 0x48;
static const int R_IA64_PCREL21B = 0x49;
static const int R_IA64_PCREL21M = 0x4a;
static const int R_IA64_PCREL21F = 0x4b;
static const int R_IA64_PCREL32MSB = 0x4c;
static const int R_IA64_PCREL32LSB = 0x4d;
static const int R_IA64_PCREL64MSB = 0x4e;
static const int R_IA64_PCREL64LSB = 0x4f;
static const int R_IA64_LTOFF_FPTR22 = 0x52;
static const int R_IA64_LTOFF_FPTR64I = 0x53;
static const int R_IA64_LTOFF_FPTR32MSB = 0x54;
static const int R_IA64_LTOFF_FPTR32LSB = 0x55;
static const int R_IA64_LTOFF_FPTR64MSB = 0x56;
static const int R_IA64_LTOFF_FPTR64LSB = 0x57;
static const int R_IA64_SEGREL32MSB = 0x5c;
static const int R_IA64_SEGREL32LSB = 0x5d;
static const int R_IA64_SEGREL64MSB = 0x5e;
static const int R_IA64_SEGREL64LSB = 0x5f;
static const int R_IA64_SECREL32MSB = 0x64;
static const int R_IA64_SECREL32LSB = 0x65;
static const int R_IA64_SECREL64MSB = 0x66;
static const int R_IA64_SECREL64LSB = 0x67;
static const int R_IA64_REL32MSB = 0x6c;
static const int R_IA64_REL32LSB = 0x6d;
static const int R_IA64_REL64MSB = 0x6e;
static const int R_IA64_REL64LSB = 0x6f;
static const int R_IA64_LTV32MSB = 0x74;
static const int R_IA64_LTV32LSB = 0x75;
static const int R_IA64_LTV64MSB = 0x76;
static const int R_IA64_LTV64LSB = 0x77;
static const int R_IA64_PCREL21BI = 0x79;
static const int R_IA64_PCREL22 = 0x7a;
static const int R_IA64_PCREL64I = 0x7b;
static const int R_IA64_IPLTMSB = 0x80;
static const int R_IA64_IPLTLSB = 0x81;
static const int R_IA64_COPY = 0x84;
static const int R_IA64_SUB = 0x85;
static const int R_IA64_LTOFF22X = 0x86;
static const int R_IA64_LDXMOV = 0x87;
static const int R_IA64_TPREL14 = 0x91;
static const int R_IA64_TPREL22 = 0x92;
static const int R_IA64_TPREL64I = 0x93;
static const int R_IA64_TPREL64MSB = 0x96;
static const int R_IA64_TPREL64LSB = 0x97;
static const int R_IA64_LTOFF_TPREL22 = 0x9a;
static const int R_IA64_DTPMOD64MSB = 0xa6;
static const int R_IA64_DTPMOD64LSB = 0xa7;
static const int R_IA64_LTOFF_DTPMOD22 = 0xaa;
static const int R_IA64_DTPREL14 = 0xb1;
static const int R_IA64_DTPREL22 = 0xb2;
static const int R_IA64_DTPREL64I = 0xb3;
static const int R_IA64_DTPREL32MSB = 0xb4;
static const int R_IA64_DTPREL32LSB = 0xb5;
static const int R_IA64_DTPREL64MSB = 0xb6;
static const int R_IA64_DTPREL64LSB = 0xb7;
static const int R_IA64_LTOFF_DTPREL22 = 0xba;
static const int R_SH_NONE = 0;
static const int R_SH_DIR32 = 1;
static const int R_SH_REL32 = 2;
static const int R_SH_DIR8WPN = 3;
static const int R_SH_IND12W = 4;
static const int R_SH_DIR8WPL = 5;
static const int R_SH_DIR8WPZ = 6;
static const int R_SH_DIR8BP = 7;
static const int R_SH_DIR8W = 8;
static const int R_SH_DIR8L = 9;
static const int R_SH_SWITCH16 = 25;
static const int R_SH_SWITCH32 = 26;
static const int R_SH_USES = 27;
static const int R_SH_COUNT = 28;
static const int R_SH_ALIGN = 29;
static const int R_SH_CODE = 30;
static const int R_SH_DATA = 31;
static const int R_SH_LABEL = 32;
static const int R_SH_SWITCH8 = 33;
static const int R_SH_GNU_VTINHERIT = 34;
static const int R_SH_GNU_VTENTRY = 35;
static const int R_SH_TLS_GD_32 = 144;
static const int R_SH_TLS_LD_32 = 145;
static const int R_SH_TLS_LDO_32 = 146;
static const int R_SH_TLS_IE_32 = 147;
static const int R_SH_TLS_LE_32 = 148;
static const int R_SH_TLS_DTPMOD32 = 149;
static const int R_SH_TLS_DTPOFF32 = 150;
static const int R_SH_TLS_TPOFF32 = 151;
static const int R_SH_GOT32 = 160;
static const int R_SH_PLT32 = 161;
static const int R_SH_COPY = 162;
static const int R_SH_GLOB_DAT = 163;
static const int R_SH_JMP_SLOT = 164;
static const int R_SH_RELATIVE = 165;
static const int R_SH_GOTOFF = 166;
static const int R_SH_GOTPC = 167;
static const int R_SH_NUM = 256;
static const int R_390_NONE = 0;
static const int R_390_8 = 1;
static const int R_390_12 = 2;
static const int R_390_16 = 3;
static const int R_390_32 = 4;
static const int R_390_PC32 = 5;
static const int R_390_GOT12 = 6;
static const int R_390_GOT32 = 7;
static const int R_390_PLT32 = 8;
static const int R_390_COPY = 9;
static const int R_390_GLOB_DAT = 10;
static const int R_390_JMP_SLOT = 11;
static const int R_390_RELATIVE = 12;
static const int R_390_GOTOFF32 = 13;
static const int R_390_GOTPC = 14;
static const int R_390_GOT16 = 15;
static const int R_390_PC16 = 16;
static const int R_390_PC16DBL = 17;
static const int R_390_PLT16DBL = 18;
static const int R_390_PC32DBL = 19;
static const int R_390_PLT32DBL = 20;
static const int R_390_GOTPCDBL = 21;
static const int R_390_64 = 22;
static const int R_390_PC64 = 23;
static const int R_390_GOT64 = 24;
static const int R_390_PLT64 = 25;
static const int R_390_GOTENT = 26;
static const int R_390_GOTOFF16 = 27;
static const int R_390_GOTOFF64 = 28;
static const int R_390_GOTPLT12 = 29;
static const int R_390_GOTPLT16 = 30;
static const int R_390_GOTPLT32 = 31;
static const int R_390_GOTPLT64 = 32;
static const int R_390_GOTPLTENT = 33;
static const int R_390_PLTOFF16 = 34;
static const int R_390_PLTOFF32 = 35;
static const int R_390_PLTOFF64 = 36;
static const int R_390_TLS_LOAD = 37;
static const int R_390_TLS_GDCALL = 38;
static const int R_390_TLS_LDCALL = 39;
static const int R_390_TLS_GD32 = 40;
static const int R_390_TLS_GD64 = 41;
static const int R_390_TLS_GOTIE12 = 42;
static const int R_390_TLS_GOTIE32 = 43;
static const int R_390_TLS_GOTIE64 = 44;
static const int R_390_TLS_LDM32 = 45;
static const int R_390_TLS_LDM64 = 46;
static const int R_390_TLS_IE32 = 47;
static const int R_390_TLS_IE64 = 48;
static const int R_390_TLS_IEENT = 49;
static const int R_390_TLS_LE32 = 50;
static const int R_390_TLS_LE64 = 51;
static const int R_390_TLS_LDO32 = 52;
static const int R_390_TLS_LDO64 = 53;
static const int R_390_TLS_DTPMOD = 54;
static const int R_390_TLS_DTPOFF = 55;
static const int R_390_TLS_TPOFF = 56;
static const int R_390_20 = 57;
static const int R_390_GOT20 = 58;
static const int R_390_GOTPLT20 = 59;
static const int R_390_TLS_GOTIE20 = 60;
static const int R_390_NUM = 61;
static const int R_CRIS_NONE = 0;
static const int R_CRIS_8 = 1;
static const int R_CRIS_16 = 2;
static const int R_CRIS_32 = 3;
static const int R_CRIS_8_PCREL = 4;
static const int R_CRIS_16_PCREL = 5;
static const int R_CRIS_32_PCREL = 6;
static const int R_CRIS_GNU_VTINHERIT = 7;
static const int R_CRIS_GNU_VTENTRY = 8;
static const int R_CRIS_COPY = 9;
static const int R_CRIS_GLOB_DAT = 10;
static const int R_CRIS_JUMP_SLOT = 11;
static const int R_CRIS_RELATIVE = 12;
static const int R_CRIS_16_GOT = 13;
static const int R_CRIS_32_GOT = 14;
static const int R_CRIS_16_GOTPLT = 15;
static const int R_CRIS_32_GOTPLT = 16;
static const int R_CRIS_32_GOTREL = 17;
static const int R_CRIS_32_PLT_GOTREL = 18;
static const int R_CRIS_32_PLT_PCREL = 19;
static const int R_CRIS_NUM = 20;
static const int R_X86_64_NONE = 0;
static const int R_X86_64_64 = 1;
static const int R_X86_64_PC32 = 2;
static const int R_X86_64_GOT32 = 3;
static const int R_X86_64_PLT32 = 4;
static const int R_X86_64_COPY = 5;
static const int R_X86_64_GLOB_DAT = 6;
static const int R_X86_64_JUMP_SLOT = 7;
static const int R_X86_64_RELATIVE = 8;
static const int R_X86_64_GOTPCREL = 9;
static const int R_X86_64_32 = 10;
static const int R_X86_64_32S = 11;
static const int R_X86_64_16 = 12;
static const int R_X86_64_PC16 = 13;
static const int R_X86_64_8 = 14;
static const int R_X86_64_PC8 = 15;
static const int R_X86_64_DTPMOD64 = 16;
static const int R_X86_64_DTPOFF64 = 17;
static const int R_X86_64_TPOFF64 = 18;
static const int R_X86_64_TLSGD = 19;
static const int R_X86_64_TLSLD = 20;
static const int R_X86_64_DTPOFF32 = 21;
static const int R_X86_64_GOTTPOFF = 22;
static const int R_X86_64_TPOFF32 = 23;
static const int R_X86_64_PC64 = 24;
static const int R_X86_64_GOTOFF64 = 25;
static const int R_X86_64_GOTPC32 = 26;
static const int R_X86_64_GOT64 = 27;
static const int R_X86_64_GOTPCREL64 = 28;
static const int R_X86_64_GOTPC64 = 29;
static const int R_X86_64_GOTPLT64 = 30;
static const int R_X86_64_PLTOFF64 = 31;
static const int R_X86_64_SIZE32 = 32;
static const int R_X86_64_SIZE64 = 33;
static const int R_X86_64_GOTPC32_TLSDESC = 34;
static const int R_X86_64_TLSDESC_CALL = 35;
static const int R_X86_64_TLSDESC = 36;
static const int R_X86_64_IRELATIVE = 37;
static const int R_X86_64_RELATIVE64 = 38;
static const int R_X86_64_NUM = 39;
static const int R_MN10300_NONE = 0;
static const int R_MN10300_32 = 1;
static const int R_MN10300_16 = 2;
static const int R_MN10300_8 = 3;
static const int R_MN10300_PCREL32 = 4;
static const int R_MN10300_PCREL16 = 5;
static const int R_MN10300_PCREL8 = 6;
static const int R_MN10300_GNU_VTINHERIT = 7;
static const int R_MN10300_GNU_VTENTRY = 8;
static const int R_MN10300_24 = 9;
static const int R_MN10300_GOTPC32 = 10;
static const int R_MN10300_GOTPC16 = 11;
static const int R_MN10300_GOTOFF32 = 12;
static const int R_MN10300_GOTOFF24 = 13;
static const int R_MN10300_GOTOFF16 = 14;
static const int R_MN10300_PLT32 = 15;
static const int R_MN10300_PLT16 = 16;
static const int R_MN10300_GOT32 = 17;
static const int R_MN10300_GOT24 = 18;
static const int R_MN10300_GOT16 = 19;
static const int R_MN10300_COPY = 20;
static const int R_MN10300_GLOB_DAT = 21;
static const int R_MN10300_JMP_SLOT = 22;
static const int R_MN10300_RELATIVE = 23;
static const int R_MN10300_NUM = 24;
static const int R_M32R_NONE = 0;
static const int R_M32R_16 = 1;
static const int R_M32R_32 = 2;
static const int R_M32R_24 = 3;
static const int R_M32R_10_PCREL = 4;
static const int R_M32R_18_PCREL = 5;
static const int R_M32R_26_PCREL = 6;
static const int R_M32R_HI16_ULO = 7;
static const int R_M32R_HI16_SLO = 8;
static const int R_M32R_LO16 = 9;
static const int R_M32R_SDA16 = 10;
static const int R_M32R_GNU_VTINHERIT = 11;
static const int R_M32R_GNU_VTENTRY = 12;
static const int R_M32R_16_RELA = 33;
static const int R_M32R_32_RELA = 34;
static const int R_M32R_24_RELA = 35;
static const int R_M32R_10_PCREL_RELA = 36;
static const int R_M32R_18_PCREL_RELA = 37;
static const int R_M32R_26_PCREL_RELA = 38;
static const int R_M32R_HI16_ULO_RELA = 39;
static const int R_M32R_HI16_SLO_RELA = 40;
static const int R_M32R_LO16_RELA = 41;
static const int R_M32R_SDA16_RELA = 42;
static const int R_M32R_RELA_GNU_VTINHERIT = 43;
static const int R_M32R_RELA_GNU_VTENTRY = 44;
static const int R_M32R_REL32 = 45;
static const int R_M32R_GOT24 = 48;
static const int R_M32R_26_PLTREL = 49;
static const int R_M32R_COPY = 50;
static const int R_M32R_GLOB_DAT = 51;
static const int R_M32R_JMP_SLOT = 52;
static const int R_M32R_RELATIVE = 53;
static const int R_M32R_GOTOFF = 54;
static const int R_M32R_GOTPC24 = 55;
static const int R_M32R_GOT16_HI_ULO = 56;
static const int R_M32R_GOT16_HI_SLO = 57;
static const int R_M32R_GOT16_LO = 58;
static const int R_M32R_GOTPC_HI_ULO = 59;
static const int R_M32R_GOTPC_HI_SLO = 60;
static const int R_M32R_GOTPC_LO = 61;
static const int R_M32R_GOTOFF_HI_ULO = 62;
static const int R_M32R_GOTOFF_HI_SLO = 63;
static const int R_M32R_GOTOFF_LO = 64;
static const int R_M32R_NUM = 256;
static const int R_MICROBLAZE_NONE = 0;
static const int R_MICROBLAZE_32 = 1;
static const int R_MICROBLAZE_32_PCREL = 2;
static const int R_MICROBLAZE_64_PCREL = 3;
static const int R_MICROBLAZE_32_PCREL_LO = 4;
static const int R_MICROBLAZE_64 = 5;
static const int R_MICROBLAZE_32_LO = 6;
static const int R_MICROBLAZE_SRO32 = 7;
static const int R_MICROBLAZE_SRW32 = 8;
static const int R_MICROBLAZE_64_NONE = 9;
static const int R_MICROBLAZE_32_SYM_OP_SYM = 10;
static const int R_MICROBLAZE_GNU_VTINHERIT = 11;
static const int R_MICROBLAZE_GNU_VTENTRY = 12;
static const int R_MICROBLAZE_GOTPC_64 = 13;
static const int R_MICROBLAZE_GOT_64 = 14;
static const int R_MICROBLAZE_PLT_64 = 15;
static const int R_MICROBLAZE_REL = 16;
static const int R_MICROBLAZE_JUMP_SLOT = 17;
static const int R_MICROBLAZE_GLOB_DAT = 18;
static const int R_MICROBLAZE_GOTOFF_64 = 19;
static const int R_MICROBLAZE_GOTOFF_32 = 20;
static const int R_MICROBLAZE_COPY = 21;
static const int R_MICROBLAZE_TLS = 22;
static const int R_MICROBLAZE_TLSGD = 23;
static const int R_MICROBLAZE_TLSLD = 24;
static const int R_MICROBLAZE_TLSDTPMOD32 = 25;
static const int R_MICROBLAZE_TLSDTPREL32 = 26;
static const int R_MICROBLAZE_TLSDTPREL64 = 27;
static const int R_MICROBLAZE_TLSGOTTPREL32 = 28;
static const int R_MICROBLAZE_TLSTPREL32 = 29;
static const int R_OR1K_NONE = 0;
static const int R_OR1K_32 = 1;
static const int R_OR1K_16 = 2;
static const int R_OR1K_8 = 3;
static const int R_OR1K_LO_16_IN_INSN = 4;
static const int R_OR1K_HI_16_IN_INSN = 5;
static const int R_OR1K_INSN_REL_26 = 6;
static const int R_OR1K_GNU_VTENTRY = 7;
static const int R_OR1K_GNU_VTINHERIT = 8;
static const int R_OR1K_32_PCREL = 9;
static const int R_OR1K_16_PCREL = 10;
static const int R_OR1K_8_PCREL = 11;
static const int R_OR1K_GOTPC_HI16 = 12;
static const int R_OR1K_GOTPC_LO16 = 13;
static const int R_OR1K_GOT16 = 14;
static const int R_OR1K_PLT26 = 15;
static const int R_OR1K_GOTOFF_HI16 = 16;
static const int R_OR1K_GOTOFF_LO16 = 17;
static const int R_OR1K_COPY = 18;
static const int R_OR1K_GLOB_DAT = 19;
static const int R_OR1K_JMP_SLOT = 20;
static const int R_OR1K_RELATIVE = 21;
static const int R_OR1K_TLS_GD_HI16 = 22;
static const int R_OR1K_TLS_GD_LO16 = 23;
static const int R_OR1K_TLS_LDM_HI16 = 24;
static const int R_OR1K_TLS_LDM_LO16 = 25;
static const int R_OR1K_TLS_LDO_HI16 = 26;
static const int R_OR1K_TLS_LDO_LO16 = 27;
static const int R_OR1K_TLS_IE_HI16 = 28;
static const int R_OR1K_TLS_IE_LO16 = 29;
static const int R_OR1K_TLS_LE_HI16 = 30;
static const int R_OR1K_TLS_LE_LO16 = 31;
static const int R_OR1K_TLS_TPOFF = 32;
static const int R_OR1K_TLS_DTPOFF = 33;
]]

return E
